Fuji Xerox Clear Text Encoding Format Version 3.00
Creator:Akane
Encoding:SJISコード
% OS:WindowsNT 6.2

Profile{NoOfPages=10;
Comments='マークダウン・テンプレート';
ExtrTtlRef={
};
}
Sty{
Name='本文';
Comments='本文';
BasicStyBdy={
PageSty={
PageSet=SprdPage;
FstPageType=on;
RelCharNo=48;
RelLineNo=41;
RelHorMgnType=inner;
RelHorMgn=2500;
AbsMgn=[2000 2000 2000 2000];
FFace='メイリオ';
FSize=10;
IntrLineH=800;
Mgn=[0 0 1100 0];
};
HdrSty={
Name='ヘッダー(左)';
PageType=LPageOnly;
Loc=TL;
FFace='メイリオ';
HdrType=PageHdr;
HdrForm=on;
HdrRefLevel=2;
};
HdrSty={
Name='ヘッダー(右)';
PageType=RPageOnly;
Loc=TR;
FFace='メイリオ';
HdrType=PageHdr;
HdrForm=on;
HdrRefLevel=3;
};
HdrSty={
Name='ヘッダー';
PageType=SymmPage;
Loc=TR;
FFace='メイリオ';
HdrType=PageHdr;
HdrForm=on;
HdrPat='DATA SHEET';
HdrRefCnt=16;
};
HdrSty={
Name='ヘッダー罫線';
PageType=SymmPage;
Loc=TL;
Ofst=[0 700];
FFace='ＭＳ ゴシック' Bld;
FSize=10;
HdrType=PageHdr;
HdrPat='━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━';
};
HdrSty={
Name='ページ番号';
PageType=SymmPage;
Loc=BL;
FFace='メイリオ';
FSize=10;
PageNoRefLoc=outer;
};
HdrSty={
Name='フッター';
PageType=SymmPage;
Loc=BR;
FFace='メイリオ';
FSize=10;
HdrType=PageHdr;
};
HdrSty={
Name='フッター罫線';
PageType=SymmPage;
Loc=BL;
Ofst=[0 -700];
FFace='ＭＳ ゴシック' Bld;
FSize=10;
HdrType=PageHdr;
HdrPat='━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━';
};
NoteSty={
ClmW=10;
Name='注段落スタイル';
RT=2;
};
TtlSty1={
Area=FullClm;
Name='レベル１見出し';
FrmDimType=[max Var];
FrmDim=[3429 0];
IMgn=[800 100 0 0];
NLO=page;
NBH=page;
SepStr=' ';
NoType=none;
FrmLineW=35;
FrmLineVis=[off off on on];
};
TtlSty2={
Area=FullClm;
Name='レベル２見出し';
FrmDimType=[max Var];
FrmDim=[4005 0];
IMgn=[800 100 0 0];
NLO=page;
NBH=page;
SepStr=' ';
NoType=none;
PreNo=off;
FrmLineW=35;
FrmLineVis=[off off on on];
};
TtlSty3={
Name='レベル３見出し';
FrmDimType=[max Var];
FrmDim=[4367 0];
NBH=null;
SepStr=' ';
NoType=none;
};
TtlSty4={
Name='レベル４見出し';
FrmDimType=[max Var];
FrmDim=[4367 0];
SepStr=' ';
NoType=none;
PreNo=off;
};
TtlStyTxt={
Name='テキスト枠見出し';
SepStr=' ';
RT=0;
};
TtlStyGeo={
Name='図形枠見出し';
PrfxStr='Fig.';
SepStr=' ';
PreNo=on;
DivStr='-';
};
TtlStyTbl={
Name='表組枠見出し';
ClmAlign=Ctrd;
PrfxStr='Table.';
SepStr=' ';
PreNo=on;
DivStr='-';
};
};
ParStyBdy={
ParSty={
Name='レベル１見出し';
FFace='メイリオ';
FSize=14;
IntrLineH=500;
Align=Start;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=0;
};
ParSty={
Name='レベル２見出し';
FFace='メイリオ';
FSize=12;
IntrLineH=800;
Align=Start;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=0;
};
ParSty={
Name='レベル３見出し';
FFace='メイリオ';
FSize=11;
IntrLineH=800;
Align=Start;
MgnUt=Pt;
Mgn=[0 0 0 0];
FstLineOfstUt=Pt;
FstLineOfst=0;
};
ParSty={
Name='段落スタイル';
Tab={
TabPos=400;
};
Tab={
TabPos=800;
};
Tab={
TabPos=1200;
};
Tab={
TabPos=1600;
};
Tab={
TabPos=2000;
};
Tab={
TabPos=2400;
};
Tab={
TabPos=2800;
};
Tab={
TabPos=3200;
};
};
ParSty={
Name='表枠内段落スタイル';
FFace='メイリオ';
FSize=10;
IntrLineH=600;
Align=Start;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=0;
IndtUt=Char;
Indt=0;
Tab={
TabPos=400;
};
Tab={
TabPos=800;
};
Tab={
TabPos=1200;
};
Tab={
TabPos=1600;
};
Tab={
TabPos=2000;
};
Tab={
TabPos=2400;
};
Tab={
TabPos=2800;
};
Tab={
TabPos=3200;
};
Tab={
TabPos=3600;
};
Tab={
TabPos=4000;
};
Tab={
TabPos=4400;
};
Tab={
TabPos=4800;
};
Tab={
TabPos=5200;
};
Tab={
TabPos=5600;
};
Tab={
TabPos=6000;
};
Tab={
TabPos=6400;
};
};
ParSty={
Name='表組枠内段落スタイル';
FSize=10;
IntrLineH=600;
Align=Start;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=0;
IndtUt=Char;
Indt=0;
Tab={
TabPos=400;
};
Tab={
TabPos=800;
};
Tab={
TabPos=1200;
};
Tab={
TabPos=1600;
};
Tab={
TabPos=2000;
};
Tab={
TabPos=2400;
};
Tab={
TabPos=2800;
};
Tab={
TabPos=3200;
};
Tab={
TabPos=3600;
};
Tab={
TabPos=4000;
};
Tab={
TabPos=4400;
};
Tab={
TabPos=4800;
};
Tab={
TabPos=5200;
};
Tab={
TabPos=5600;
};
Tab={
TabPos=6000;
};
Tab={
TabPos=6400;
};
};
ParSty={
Name='表組枠見出し';
FSize=10;
Align=Ctrd;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=0;
IndtUt=Char;
Indt=0;
};
ParSty={
Name='本文箇条書きレベル１';
FstLineOfstUt=Char;
FstLineOfst=0;
IndtUt=Char;
Indt=100;
Tab={
TabPos=400;
};
Tab={
TabPos=800;
};
Tab={
TabPos=1200;
};
Tab={
TabPos=1600;
};
Tab={
TabPos=2000;
};
Tab={
TabPos=2400;
};
Tab={
TabPos=2800;
};
Tab={
TabPos=3200;
};
};
ParSty={
Name='本文箇条書きレベル２';
FstLineOfstUt=Char;
FstLineOfst=400;
IndtUt=Char;
Indt=500;
};
ParSty={
Name='表組枠内箇条書きレベル１';
FSize=10;
IntrLineH=600;
Align=Start;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=0;
IndtUt=Char;
Indt=100;
};
ParSty={
Name='図形枠見出し';
FFace='メイリオ';
FSize=10;
Align=Ctrd;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=0;
IndtUt=Char;
Indt=0;
};
ParSty={
Name='コラム内本文段落スタイル';
FSize=10;
Align=Start;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=100;
IndtUt=Char;
Indt=0;
};
ParSty={
Name='本文段落スタイル';
MgnUt=Char;
Mgn=[0 100 1100 0];
Tab={
TabPos=400;
};
Tab={
TabPos=800;
};
Tab={
TabPos=1200;
};
Tab={
TabPos=1600;
};
Tab={
TabPos=2000;
};
Tab={
TabPos=2400;
};
Tab={
TabPos=2800;
};
Tab={
TabPos=3200;
};
};
ParSty={
Name='注段落スタイル';
FSize=9;
Align=Just;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=0;
IndtUt=Char;
Indt=400;
};
ParSty={
Name='レベル４見出し';
FSize=11;
Align=Start;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=0;
IndtUt=Char;
Indt=0;
};
ParSty={
Name='図形枠内段落';
FFace='Meiryo UI';
FSize=10;
FColr=[0 0 0];
IntrLineH=0;
Align=Ctrd;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=0;
IndtUt=Char;
Indt=0;
};
ParSty={
Name='Makefile';
FFace='Ricty';
FSize=10;
FColr=[0 0 0];
IntrLineH=600;
Align=Start;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=0;
Tab={
TabPos=800;
};
Tab={
TabPos=1600;
};
};
ParSty={
Name='C';
FFace='Ricty';
FSize=10;
FColr=[0 0 0];
IntrLineH=600;
Align=Start;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=0;
Tab={
TabPos=200;
};
Tab={
TabPos=400;
};
Tab={
TabPos=600;
};
Tab={
TabPos=800;
};
Tab={
TabPos=1000;
};
Tab={
TabPos=1200;
};
Tab={
TabPos=1400;
};
Tab={
TabPos=1600;
};
};
ParSty={
Name='VHDL';
FFace=156;
FSize=10;
FColr=[0 0 0];
IntrLineH=600;
Align=Start;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=0;
Tab={
TabPos=200;
};
Tab={
TabPos=400;
};
Tab={
TabPos=600;
};
Tab={
TabPos=800;
};
Tab={
TabPos=1000;
};
Tab={
TabPos=1200;
};
Tab={
TabPos=1400;
};
Tab={
TabPos=1600;
};
Tab={
TabPos=1800;
};
Tab={
TabPos=2000;
};
Tab={
TabPos=2200;
};
Tab={
TabPos=2400;
};
Tab={
TabPos=2600;
};
Tab={
TabPos=2800;
};
Tab={
TabPos=3000;
};
Tab={
TabPos=3200;
};
};
ParSty={
Name='Python';
FFace='Ricty';
FSize=10;
FColr=[0 0 0];
IntrLineH=600;
Align=Start;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=0;
Tab={
TabPos=200;
};
Tab={
TabPos=400;
};
Tab={
TabPos=600;
};
Tab={
TabPos=800;
};
Tab={
TabPos=1000;
};
Tab={
TabPos=1200;
};
Tab={
TabPos=1400;
};
Tab={
TabPos=1600;
};
Tab={
TabPos=1800;
};
Tab={
TabPos=2000;
};
Tab={
TabPos=2200;
};
Tab={
TabPos=2400;
};
Tab={
TabPos=2600;
};
Tab={
TabPos=2800;
};
Tab={
TabPos=3000;
};
Tab={
TabPos=3200;
};
};
ParSty={
Name='devicetree';
FFace='Ricty';
FSize=10;
FColr=[0 0 0];
IntrLineH=600;
Align=Start;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=0;
Tab={
TabPos=800;
};
Tab={
TabPos=1600;
};
};
ParSty={
Name='Shell';
FFace='Ricty';
FSize=10;
FColr=[0 0 0];
IntrLineH=600;
Align=Start;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=0;
};
ParSty={
Name='console';
FFace='Ricty';
FSize=10;
FColr=[0 0 0];
IntrLineH=600;
Align=Start;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=0;
};
ParSty={
Name='テキスト枠見出し';
FFace='Ricty';
FSize=10;
FColr=[0 0 0];
IntrLineH=800;
Align=Start;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=0;
};
};
}
Root[3]{}
Comp[3 0]{Type=NoSeg;
}
Comp[3 0 0]{Type=Ttl;
Ctgry=TtlInBdy;
ULayedPageNo=1;
}
Basic[3 0 0 0]{Type=TtlNo;
Ctgry=Discard;
}
Char[3 0 0 0 0]{CntInfo=' ';
}
Basic[3 0 0 1]{Type=TtlTxt;
}
Char[3 0 0 1 0]{CntInfo='VHDL で書くマージソーター(バブルソート)';
CntSty={
ParSty='レベル１見出し';
};
}
Comp[3 0 1]{Type=NoSeg;
}
Comp[3 0 1 0]{Type=Ttl;
Ctgry=TtlInBdy;
ULayedPageNo=1;
}
Basic[3 0 1 0 0]{Type=TtlNo;
Ctgry=Discard;
}
Char[3 0 1 0 0 0]{CntInfo=' ';
}
Basic[3 0 1 0 1]{Type=TtlTxt;
}
Char[3 0 1 0 1 0]{CntInfo='はじめに';
CntSty={
ParSty='レベル２見出し';
};
}
Basic[3 0 1 1]{Type=Txt;
}
Char[3 0 1 1 0]{CntInfo='別記事 [「はじめに」] を参照してください。';
}
Basic[3 0 1 2]{Type=Txt;
}
Char[3 0 1 2 0]{CntInfo='この記事では、別記事で紹介した [「ソーティングネットワーク」]を使ってバブルソート回路を構成する方法を紹介します。';
}
Basic[3 0 1 3]{Type=Txt;
}
Char[3 0 1 3 0]{CntInfo='';
CntSty={
ParSty='本文箇条書きレベル１';
};
}
Comp[3 0 2]{Type=NoSeg;
}
Comp[3 0 2 0]{Type=Ttl;
Ctgry=TtlInBdy;
LaySty={
NLO=null;
};
ULayedPageNo=1;
}
Basic[3 0 2 0 0]{Type=TtlNo;
Ctgry=Discard;
}
Char[3 0 2 0 0 0]{CntInfo=' ';
}
Basic[3 0 2 0 1]{Type=TtlTxt;
}
Char[3 0 2 0 1 0]{CntInfo='バブルソートとは';
CntSty={
ParSty='レベル２見出し';
};
}
Basic[3 0 2 1]{Type=Txt;
}
Char[3 0 2 1 0]{CntInfo='バブルソート(bubble sort) は、隣り合う要素の大小を比較しながら整列させるソートアルゴリズムです。アルゴリズムが比較的単純で実装も容易ですが、最悪計算量がO(n**2)と遅いため、一般にはマージソートなどより最悪時間計算量の小さな方法が利用されます。(出典:[https://wikipedia.org/wiki/Bubble_sort])。';
}
Basic[3 0 2 2]{Type=Txt;
}
Char[3 0 2 2 0]{CntInfo='';
}
Basic[3 0 2 3]{Type=Txt;
}
Char[3 0 2 3 0]{CntInfo='以下に Python で記述したバブルソートの実装例を示します。(出典:[『Pythonで学ぶアルゴリズム　第17弾：並べ替え（バブルソート）』@Qiita](https://qiita.com/Yuya-Shimizu/items/99349001f0fccc0d8d41) )。';
CntSty={
Align=Start;
};
}
Comp[3 0 2 4]{Type=Fig;
Ctgry=FigInBdy;
FigAttr={
FrmLineVis=[on on on on];
DimType=[on on];
TxtArea=[on off off off];
LineAlign=Ctrd;
Dim=[16916 3672];
TxtAreaSize=[353 0 0 0];
};
}
Comp[3 0 2 4 0]{Type=Art;
Ctgry=StdInArt;
}
Basic[3 0 2 4 0 0]{Type=ArtTxt;
}
Char[3 0 2 4 0 0 0]{CntInfo='def bubble_sort(data):
    for i in range(len(data)):
        for j in range(len(data) - i -1):
            if data[j] > data[j+1]: 
                data[j], data[j+1] = data[j+1], data[j] 
    return data';
CntSty={
ParSty='Python';
};
}
Comp[3 0 2 4 1]{Type=Desc;
Ctgry=StdInTCap;
}
Comp[3 0 2 4 1 0]{Type=Cap;
Ctgry=FigTtlInBdy;
}
Basic[3 0 2 4 1 0 0]{Type=CapNo;
Ctgry=Discard;
}
Char[3 0 2 4 1 0 0 0]{CntInfo=' ';
}
Basic[3 0 2 4 1 0 1]{Type=CapTxt;
}
Char[3 0 2 4 1 0 1 0]{CntInfo='bubble_sort.py';
CntSty={
ParSty='テキスト枠見出し';
};
}
Basic[3 0 2 5]{Type=Txt;
}
Char[3 0 2 5 0]{CntInfo='';
}
Basic[3 0 2 6]{Type=Txt;
}
Char[3 0 2 6 0]{CntInfo='これをそのままソーティングネットワークにすると次のようになります。';
}
Comp[3 0 2 7]{Type=Fig;
Ctgry=FigInBdy;
FigAttr={
DimType=[on on];
TxtArea=[off on off off];
LineAlign=Ctrd;
IMgn=[0 0 0 0];
Dim=[15071 5588];
TxtAreaSize=[0 353 0 0];
};
}
Comp[3 0 2 7 0]{Type=Art;
Ctgry=StdInArt;
}
Basic[3 0 2 7 0 0]{}
Geo[3 0 2 7 0 0 0]{CntInfo={
BEGMF 'interchangeV2';
mfversion 1;
mfdesc 'Akane V2.0';
vdctype int;
integerprec -32767 32767;
colrprec 255;
colrvalext 0 0 0 255 255 255;
mfelemlist 'drawingplus';
BEGPIC;
colrmode direct;
linewidthmode abs;
markersizemode abs;
edgewidthmode abs;
vdcext (0 0)(7120 2640);
BEGPICBODY;
vdcintegerprec -32767 32767;
cliprect (0 0)(7120 2640);
clip on;
asf all indiv;
appldata 5 0 0 400 0 0 0 0 0 0 0 0 0 0 1 0;
BEGPLANE 0 '';
linewidth 34;
line (189 378)(6992 378);
line (189 756)(6992 756);
line (189 1134)(6992 1134);
line (189 1512)(6992 1512);
line (189 1890)(6991 1890);
line (189 2268)(6991 2268);
lineendcap 5;
line (1323 1512)(1323 1134);
line (945 1890)(945 1512);
line (567 2268)(567 1890);
edgewidth 9;
edgetype 3;
intstyle empty;
rect (378 189)(756 2457)(0 1);
line (1701 1134)(1701 756);
line (2079 756)(2079 378);
line (2647 2268)(2647 1890);
line (3025 1890)(3025 1512);
line (3403 1512)(3403 1134);
line (3781 1134)(3781 756);
line (4347 2268)(4347 1890);
line (4724 1890)(4724 1512);
line (5102 1512)(5102 1134);
line (5669 2268)(5669 1890);
line (6047 1890)(6047 1512);
rect (756 189)(1134 2457)(0 1);
rect (1134 189)(1512 2457)(0 1);
rect (1512 189)(1890 2457)(0 1);
rect (1890 189)(2268 2457)(0 1);
rect (2458 189)(2836 2457)(0 1);
rect (2836 189)(3214 2457)(0 1);
rect (3214 189)(3592 2457)(0 1);
rect (3591 189)(3969 2457)(0 1);
rect (4157 189)(4535 2457)(0 1);
rect (4535 189)(4913 2457)(0 1);
rect (4913 189)(5291 2457)(0 1);
rect (5480 189)(5858 2457)(0 1);
rect (5858 189)(6236 2457)(0 1);
line (6614 2268)(6614 1890);
rect (6425 189)(6803 2457)(0 1);
ENDPLANE;
ENDPIC;
ENDMF;
};
}
Comp[3 0 2 7 1]{Type=Desc;
Ctgry=StdInBCap;
}
Comp[3 0 2 7 1 0]{Type=Cap;
Ctgry=FigTtlInBdy;
}
Basic[3 0 2 7 1 0 0]{Type=CapNo;
Ctgry=Discard;
}
Char[3 0 2 7 1 0 0 0]{CntInfo='Fig.1 ';
}
Basic[3 0 2 7 1 0 1]{Type=CapTxt;
}
Char[3 0 2 7 1 0 1 0]{CntInfo='バブルソートのソーティングネットワーク例(最適化前)';
CntSty={
ParSty='図形枠見出し';
};
}
Basic[3 0 2 8]{Type=Txt;
}
Char[3 0 2 8 0]{CntInfo='';
}
Basic[3 0 2 9]{Type=Txt;
}
Char[3 0 2 9 0]{CntInfo='ただし、このままだとステージ数が多いため、次の図のように並列処理できるステージをまとめてしまいます。';
}
Comp[3 0 2 10]{Type=Fig;
Ctgry=FigInBdy;
FigAttr={
DimType=[on on];
TxtArea=[off on off off];
LineAlign=Ctrd;
IMgn=[0 0 0 0];
Dim=[15024 12016];
TxtAreaSize=[0 353 0 0];
};
}
Comp[3 0 2 10 0]{Type=Art;
Ctgry=StdInArt;
}
Basic[3 0 2 10 0 0]{}
Geo[3 0 2 10 0 0 0]{CntInfo={
BEGMF 'interchangeV2';
mfversion 1;
mfdesc 'Akane V2.0';
vdctype int;
integerprec -32767 32767;
colrprec 255;
colrvalext 0 0 0 255 255 255;
mfelemlist 'drawingplus';
BEGPIC;
colrmode direct;
linewidthmode abs;
markersizemode abs;
edgewidthmode abs;
vdcext (0 0)(7098 5677);
BEGPICBODY;
vdcintegerprec -32767 32767;
cliprect (0 0)(7098 5677);
clip on;
asf all indiv;
appldata 5 0 0 400 0 0 0 0 0 0 0 0 0 0 1 0;
BEGPLANE 0 '';
linewidth 34;
line (189 378)(6992 378);
line (189 756)(6992 756);
line (189 1134)(6992 1134);
line (189 1512)(6992 1512);
line (189 1890)(6991 1890);
line (189 2268)(6991 2268);
lineendcap 5;
line (1323 1512)(1323 1134);
line (945 1890)(945 1512);
line (567 2268)(567 1890);
edgewidth 9;
edgetype 3;
intstyle empty;
rect (378 189)(756 2457)(0 1);
line (1701 1134)(1701 756);
line (2079 756)(2079 378);
line (2647 2268)(2647 1890);
line (3025 1890)(3025 1512);
line (3403 1512)(3403 1134);
line (3781 1134)(3781 756);
line (4347 2268)(4347 1890);
line (4724 1890)(4724 1512);
line (5102 1512)(5102 1134);
line (5669 2268)(5669 1890);
line (6047 1890)(6047 1512);
rect (756 189)(1134 2457)(0 1);
line (6614 2268)(6614 1890);
polygon (1134 189)(1512 189)(1512 1701)(2835 1701)(2835 2457)(2457 2457)(2457 2079)(1134 2079);
polygon (1512 189)(1890 189)(1890 1323)(3213 1323)(3213 2457)(2835 2457)(2835 1701)(1512 1701);
polygon (2268 189)(2268 945)(3591 945)(3591 1701)(4535 1701)(4535 2457)(4157 2457)(4157 2079)(3213 2079)(3213 1323)(1890 1323)(1890 189);
polygon (3969 189)(3969 1323)(4913 1323)(4913 2457)(4535 2457)(4535 1701)(3591 1701)(3591 189);
polygon (5291 189)(5291 1323)(5858 1323)(5858 2457)(5480 2457)(5480 1701)(4913 1701)(4913 189);
rect (5858 189)(6236 2457)(0 1);
rect (6425 189)(6803 2457)(0 1);
lineendcap 1;
line (189 3402)(6992 3402);
line (189 3780)(6992 3780);
line (189 4158)(6992 4158);
line (189 4536)(6992 4536);
line (189 4914)(6991 4914);
line (189 5292)(6991 5292);
lineendcap 5;
line (3024 4536)(3024 4158);
line (2646 4914)(2646 4536);
line (2268 5292)(2268 4914);
line (3402 4158)(3402 3780);
line (3780 3780)(3780 3402);
line (3024 5291)(3024 4913);
line (3402 4913)(3402 4535);
line (3780 4535)(3780 4157);
line (3780 5291)(3780 4913);
line (4157 4157)(4157 3779);
line (4157 4913)(4157 4535);
line (4535 4535)(4535 4157);
line (4535 5291)(4535 4913);
line (4913 4913)(4913 4535);
line (5291 5291)(5291 4913);
rect (2079 3212)(2457 5480)(0 1);
rect (2457 3212)(2835 5480)(0 1);
rect (2835 3212)(3213 5480)(0 1);
rect (3213 3212)(3591 5480)(0 1);
rect (3591 3212)(3969 5480)(0 1);
rect (3968 3212)(4346 5480)(0 1);
rect (4346 3212)(4724 5480)(0 1);
rect (4724 3212)(5102 5480)(0 1);
rect (5102 3212)(5480 5480)(0 1);
linetype 3;
linewidth 9;
line (567 2457)(567 3024)(2268 3024)(2268 3213);
line (945 2457)(945 2835)(2646 2835)(2646 3213);
line (2646 2457)(2646 2646)(3024 2835)(3024 3213);
lineendcap 4;
line (3024 2457)(3024 2646)(3402 2835)(3402 3213);
lineendcap 5;
line (4346 2457)(4346 2646)(3780 2835)(3780 3213);
line (4724 2457)(4724 2646)(4157 2835)(4157 3213);
line (5669 2457)(5669 2646)(4535 2835)(4535 3213);
line (6047 2457)(6047 2835)(4913 2835)(4913 3213);
line (6614 2457)(6614 3024)(5291 3024)(5291 3213);
ENDPLANE;
ENDPIC;
ENDMF;
};
}
Comp[3 0 2 10 1]{Type=Desc;
Ctgry=StdInBCap;
}
Comp[3 0 2 10 1 0]{Type=Cap;
Ctgry=FigTtlInBdy;
}
Basic[3 0 2 10 1 0 0]{Type=CapNo;
Ctgry=Discard;
}
Char[3 0 2 10 1 0 0 0]{CntInfo='Fig.2 ';
}
Basic[3 0 2 10 1 0 1]{Type=CapTxt;
}
Char[3 0 2 10 1 0 1 0]{CntInfo='バブルソートのソーティングネットワーク例(最適化後)';
CntSty={
ParSty='図形枠見出し';
};
}
Comp[3 0 3]{Type=NoSeg;
}
Comp[3 0 3 0]{Type=Ttl;
Ctgry=TtlInBdy;
ULayedPageNo=3;
}
Basic[3 0 3 0 0]{Type=TtlNo;
Ctgry=Discard;
}
Char[3 0 3 0 0 0]{CntInfo=' ';
}
Basic[3 0 3 0 1]{Type=TtlTxt;
}
Char[3 0 3 0 1 0]{CntInfo='バブルソートの VHDL 記述';
CntSty={
ParSty='レベル２見出し';
};
}
Comp[3 0 3 1]{Type=NoSeg;
}
Comp[3 0 3 1 0]{Type=Ttl;
Ctgry=TtlInBdy;
ULayedPageNo=3;
}
Basic[3 0 3 1 0 0]{Type=TtlNo;
Ctgry=Discard;
}
Char[3 0 3 1 0 0 0]{CntInfo=' ';
}
Basic[3 0 3 1 0 1]{Type=TtlTxt;
}
Char[3 0 3 1 0 1 0]{CntInfo='ソーティングネットワークの VHDL 記述';
CntSty={
ParSty='レベル３見出し';
};
}
Comp[3 0 3 1 1]{Type=NoSeg;
}
Comp[3 0 3 1 1 0]{Type=Ttl;
Ctgry=TtlInBdy;
ULayedPageNo=3;
}
Basic[3 0 3 1 1 0 0]{Type=TtlNo;
Ctgry=Discard;
}
Char[3 0 3 1 1 0 0 0]{CntInfo=' ';
}
Basic[3 0 3 1 1 0 1]{Type=TtlTxt;
}
Char[3 0 3 1 1 0 1 0]{CntInfo='New_Network 関数';
CntSty={
ParSty='レベル４見出し';
};
}
Basic[3 0 3 1 1 1]{Type=Txt;
}
Char[3 0 3 1 1 1 0]{CntInfo='New_Network 関数は、バブルソートソートのソーティングネットワークに対応した Sorting_Network.Param_Type([「ソーティングネットワーク」]参照)を生成します。 New_Network 関数は Bubble_Sort_Network パッケージにて定義しています。';
}
Comp[3 0 3 1 1 2]{Type=Fig;
Ctgry=FigInBdy;
FigAttr={
FrmLineVis=[on on on on];
DimType=[on on];
TxtArea=[on off off off];
LineAlign=Ctrd;
Dim=[16916 10376];
TxtAreaSize=[353 0 0 0];
};
}
Comp[3 0 3 1 1 2 0]{Type=Art;
Ctgry=StdInArt;
}
Basic[3 0 3 1 1 2 0 0]{Type=ArtTxt;
}
Char[3 0 3 1 1 2 0 0 0]{CntInfo='library ieee;
use     ieee.std_logic_1164.all;
use     ieee.numeric_std.all;
library Merge_Sorter;
use     Merge_Sorter.Sorting_Network;
package Bubble_Sort_Network is
    function   New_Network(
                  LO          :  integer;
                  HI          :  integer;
                  ORDER       :  integer
    )             return         Sorting_Network.Param_Type;
    function   New_Network(
                  LO          :  integer;
                  HI          :  integer;
                  ORDER       :  integer;
                  QUEUE       :  Sorting_Network.Queue_Param_Type
    )             return         Sorting_Network.Param_Type;
end Bubble_Sort_Network;
';
CntSty={
ParSty='VHDL';
};
}
Comp[3 0 3 1 1 2 1]{Type=Desc;
Ctgry=StdInTCap;
}
Comp[3 0 3 1 1 2 1 0]{Type=Cap;
Ctgry=FigTtlInBdy;
}
Basic[3 0 3 1 1 2 1 0 0]{Type=CapNo;
Ctgry=Discard;
}
Char[3 0 3 1 1 2 1 0 0 0]{CntInfo=' ';
}
Basic[3 0 3 1 1 2 1 0 1]{Type=CapTxt;
}
Char[3 0 3 1 1 2 1 0 1 0]{CntInfo='src/main/vhdl/core/bubble_sort_network.vhd';
CntSty={
ParSty='テキスト枠見出し';
};
}
Basic[3 0 3 1 1 3]{Type=Txt;
}
Char[3 0 3 1 1 3 0]{CntInfo='';
}
Comp[3 0 3 1 1 4]{Type=Fig;
Ctgry=FigInBdy;
FigAttr={
FrmLineVis=[on on on on];
DimType=[on on];
TxtArea=[on off off off];
LineAlign=Ctrd;
Dim=[16781 16072];
TxtAreaSize=[353 0 0 0];
};
}
Comp[3 0 3 1 1 4 0]{Type=Art;
Ctgry=StdInArt;
}
Basic[3 0 3 1 1 4 0 0]{Type=ArtTxt;
}
Char[3 0 3 1 1 4 0 0 0]{CntInfo='package body Bubble_Sort_Network is
    -- (前略) --
    function   New_Network(
                  LO          :  integer;
                  HI          :  integer;
                  ORDER       :  integer
    )             return         Sorting_Network.Param_Type
    is
        variable  network     :  Sorting_Network.Param_Type;
    begin
        network := Sorting_Network.New_Network(LO,HI,ORDER);
        bubble_sort(network, network.Stage_Lo, network.Lo, network.Hi);
        return network;
    end function;
    function   New_Network(
                  LO          :  integer;
                  HI          :  integer;
                  ORDER       :  integer;
                  QUEUE       :  Sorting_Network.Queue_Param_Type
    )             return         Sorting_Network.Param_Type
    is
        variable  network     :  Sorting_Network.Param_Type;
    begin
        network := New_Network(LO,HI,ORDER);
        Sorting_Network.Set_Queue_Param(network, QUEUE);
        return network;
    end function;
end Bubble_Sort_Network;';
CntSty={
ParSty='VHDL';
};
}
Comp[3 0 3 1 1 4 1]{Type=Desc;
Ctgry=StdInTCap;
}
Comp[3 0 3 1 1 4 1 0]{Type=Cap;
Ctgry=FigTtlInBdy;
}
Basic[3 0 3 1 1 4 1 0 0]{Type=CapNo;
Ctgry=Discard;
}
Char[3 0 3 1 1 4 1 0 0 0]{CntInfo=' ';
}
Basic[3 0 3 1 1 4 1 0 1]{Type=CapTxt;
}
Char[3 0 3 1 1 4 1 0 1 0]{CntInfo='src/main/vhdl/core/bubble_sort_network.vhd';
CntSty={
ParSty='テキスト枠見出し';
};
}
Basic[3 0 3 1 1 5]{Type=Txt;
}
Char[3 0 3 1 1 5 0]{CntInfo='';
}
Comp[3 0 3 1 2]{Type=NoSeg;
}
Comp[3 0 3 1 2 0]{Type=Ttl;
Ctgry=TtlInBdy;
LaySty={
NLO=page;
};
ULayedPageNo=5;
}
Basic[3 0 3 1 2 0 0]{Type=TtlNo;
Ctgry=Discard;
}
Char[3 0 3 1 2 0 0 0]{CntInfo=' ';
}
Basic[3 0 3 1 2 0 1]{Type=TtlTxt;
}
Char[3 0 3 1 2 0 1 0]{CntInfo='bubble_sort 関数';
CntSty={
ParSty='レベル４見出し';
};
}
Basic[3 0 3 1 2 1]{Type=Txt;
}
Char[3 0 3 1 2 1 0]{CntInfo='Bubble_Sort_Netowork パッケージボディに定義されたbubble_sort 関数は、前述の Python による実装でしめした bubble_sort に対応します。bubble_sort 関数を再帰的に呼び出しています。';
}
Comp[3 0 3 1 2 2]{Type=Fig;
Ctgry=FigInBdy;
FigAttr={
FrmLineVis=[on on on on];
DimType=[on on];
TxtArea=[on off off off];
LineAlign=Ctrd;
Dim=[16916 14402];
TxtAreaSize=[353 0 0 0];
};
}
Comp[3 0 3 1 2 2 0]{Type=Art;
Ctgry=StdInArt;
}
Basic[3 0 3 1 2 2 0 0]{Type=ArtTxt;
}
Char[3 0 3 1 2 2 0 0 0]{CntInfo='package body Bubble_Sort_Network is
    -- (前略) --
    procedure bubble_sort(
        variable  NETWORK     :  inout Sorting_Network.Param_Type;
                  START_STAGE :  in    integer;
                  LO          :  in    integer;
                  HI          :  in    integer
    ) is
        variable  comp_stage  :        integer;
    begin
        if (HI - LO > 0) then
            comp_stage := START_STAGE;
            for net in HI-1 downto LO loop
                Sorting_Network.Add_Comparator(NETWORK, comp_stage, net, net+1, TRUE);
                if (NETWORK.Stage_Hi \<  comp_stage) then
                    NETWORK.Stage_Hi := comp_stage;
                end if;
                comp_stage := comp_stage + 1;
            end loop;
            NETWORK.Stage_Size := NETWORK.Stage_Hi - NETWORK.Stage_Lo + 1;
            bubble_sort(NETWORK, START_STAGE + 2, LO + 1, HI);
        end if;
    end procedure;
    -- (後略) --
end Bubble_Sort_Network;';
CntSty={
ParSty='VHDL';
};
}
Comp[3 0 3 1 2 2 1]{Type=Desc;
Ctgry=StdInTCap;
}
Comp[3 0 3 1 2 2 1 0]{Type=Cap;
Ctgry=FigTtlInBdy;
}
Basic[3 0 3 1 2 2 1 0 0]{Type=CapNo;
Ctgry=Discard;
}
Char[3 0 3 1 2 2 1 0 0 0]{CntInfo=' ';
}
Basic[3 0 3 1 2 2 1 0 1]{Type=CapTxt;
}
Char[3 0 3 1 2 2 1 0 1 0]{CntInfo='src/main/vhdl/core/bubble_sort_network.vhd';
CntSty={
ParSty='テキスト枠見出し';
};
}
Basic[3 0 3 1 2 3]{Type=Txt;
}
Char[3 0 3 1 2 3 0]{CntInfo='';
}
Comp[3 0 3 2]{Type=NoSeg;
}
Comp[3 0 3 2 0]{Type=Ttl;
Ctgry=TtlInBdy;
LaySty={
NLO=page;
};
ULayedPageNo=6;
}
Basic[3 0 3 2 0 0]{Type=TtlNo;
Ctgry=Discard;
}
Char[3 0 3 2 0 0 0]{CntInfo=' ';
}
Basic[3 0 3 2 0 1]{Type=TtlTxt;
}
Char[3 0 3 2 0 1 0]{CntInfo='バブルソートの VHDL 記述例';
CntSty={
ParSty='レベル３見出し';
};
}
Basic[3 0 3 2 1]{Type=Txt;
}
Char[3 0 3 2 1 0]{CntInfo='前回の[「ソーティングネットワーク」]で説明した Sorting_Network_Core に、前述で説明した New_Network関数で生成したソーティングネットワーク構成を示す定数を渡してバブルソート回路を構成した例を示します。';
}
Comp[3 0 3 2 2]{Type=NoSeg;
}
Comp[3 0 3 2 2 0]{Type=Ttl;
Ctgry=TtlInBdy;
ULayedPageNo=6;
}
Basic[3 0 3 2 2 0 0]{Type=TtlNo;
Ctgry=Discard;
}
Char[3 0 3 2 2 0 0 0]{CntInfo=' ';
}
Basic[3 0 3 2 2 0 1]{Type=TtlTxt;
}
Char[3 0 3 2 2 0 1 0]{CntInfo='Entity ';
CntSty={
ParSty='レベル４見出し';
};
}
Comp[3 0 3 2 2 1]{Type=Fig;
Ctgry=FigInBdy;
FigAttr={
FrmLineVis=[on on on on];
DimType=[on on];
TxtArea=[on off off off];
LineAlign=Ctrd;
Dim=[16916 19126];
TxtAreaSize=[353 0 0 0];
};
}
Comp[3 0 3 2 2 1 0]{Type=Art;
Ctgry=StdInArt;
}
Basic[3 0 3 2 2 1 0 0]{Type=ArtTxt;
}
Char[3 0 3 2 2 1 0 0 0]{CntInfo='library ieee;
use     ieee.std_logic_1164.all;
entity  Bubble_Sorter is
    generic (
        WORDS           :  integer :=  4;
        DATA_BITS       :  integer := 32;
        COMP_HIGH       :  integer := 32;
        COMP_LOW        :  integer :=  0;
        COMP_SIGN       :  boolean := FALSE;
        SORT_ORDER      :  integer :=  0;
        ATRB_BITS       :  integer :=  4;
        INFO_BITS       :  integer :=  1;
        QUEUE_SIZE      :  integer :=  0
    );
    port (
        CLK             :  in  std_logic;
        RST             :  in  std_logic;
        CLR             :  in  std_logic;
        I_DATA          :  in  std_logic_vector(WORDS*DATA_BITS-1 downto 0);
        I_ATRB          :  in  std_logic_vector(WORDS*ATRB_BITS-1 downto 0) := (others => \'0\');
        I_INFO          :  in  std_logic_vector(      INFO_BITS-1 downto 0) := (others => \'0\');
        I_VALID         :  in  std_logic;
        I_READY         :  out std_logic;
        O_DATA          :  out std_logic_vector(WORDS*DATA_BITS-1 downto 0);
        O_ATRB          :  out std_logic_vector(WORDS*ATRB_BITS-1 downto 0);
        O_INFO          :  out std_logic_vector(      INFO_BITS-1 downto 0);
        O_VALID         :  out std_logic;
        O_READY         :  in  std_logic;
        BUSY            :  out std_logic
    );
end Bubble_Sorter;
';
CntSty={
ParSty='VHDL';
};
}
Comp[3 0 3 2 2 1 1]{Type=Desc;
Ctgry=StdInTCap;
}
Comp[3 0 3 2 2 1 1 0]{Type=Cap;
Ctgry=FigTtlInBdy;
}
Basic[3 0 3 2 2 1 1 0 0]{Type=CapNo;
Ctgry=Discard;
}
Char[3 0 3 2 2 1 1 0 0 0]{CntInfo=' ';
}
Basic[3 0 3 2 2 1 1 0 1]{Type=CapTxt;
}
Char[3 0 3 2 2 1 1 0 1 0]{CntInfo='src/main/vhdl/examples/bubble_sorter/bubble_sorter.vhd';
CntSty={
ParSty='テキスト枠見出し';
};
}
Comp[3 0 3 2 3]{Type=NoSeg;
}
Comp[3 0 3 2 3 0]{Type=Ttl;
Ctgry=TtlInBdy;
LaySty={
NLO=page;
};
ULayedPageNo=7;
}
Basic[3 0 3 2 3 0 0]{Type=TtlNo;
Ctgry=Discard;
}
Char[3 0 3 2 3 0 0 0]{CntInfo=' ';
}
Basic[3 0 3 2 3 0 1]{Type=TtlTxt;
}
Char[3 0 3 2 3 0 1 0]{CntInfo='Architecture';
CntSty={
ParSty='レベル４見出し';
};
}
Basic[3 0 3 2 3 1]{Type=Txt;
}
Char[3 0 3 2 3 1 0]{CntInfo='[「ワードの定義」]で説明したパラメータを WORD_PARAM 定数に設定します。';
}
Comp[3 0 3 2 3 2]{Type=Fig;
Ctgry=FigInBdy;
FigAttr={
FrmLineVis=[on on on on];
DimType=[on on];
TxtArea=[on off off off];
LineAlign=Ctrd;
Dim=[16125 7724];
TxtAreaSize=[353 0 0 0];
};
}
Comp[3 0 3 2 3 2 0]{Type=Art;
Ctgry=StdInArt;
}
Basic[3 0 3 2 3 2 0 0]{Type=ArtTxt;
}
Char[3 0 3 2 3 2 0 0 0]{CntInfo='library ieee;
use     ieee.std_logic_1164.all;
library Merge_Sorter;
use     Merge_Sorter.Word;
use     Merge_Sorter.Sorting_Network;
use     Merge_Sorter.Bubble_Sort_Network;
use     Merge_Sorter.Core_Components.Sorting_Network_Core;
architecture RTL of Bubble_Sorter is
    constant  WORD_PARAM    :  Word.Param_Type := Word.New_Param(DATA_BITS, COMP_LOW, COMP_HIGH, COMP_SIGN);
    signal    i_word        :  std_logic_vector(WORDS*WORD_PARAM.BITS-1 downto 0);
    signal    o_word        :  std_logic_vector(WORDS*WORD_PARAM.BITS-1 downto 0);
begin';
CntSty={
ParSty='VHDL';
};
}
Comp[3 0 3 2 3 2 1]{Type=Desc;
Ctgry=StdInTCap;
}
Comp[3 0 3 2 3 2 1 0]{Type=Cap;
Ctgry=FigTtlInBdy;
}
Basic[3 0 3 2 3 2 1 0 0]{Type=CapNo;
Ctgry=Discard;
}
Char[3 0 3 2 3 2 1 0 0 0]{CntInfo=' ';
}
Basic[3 0 3 2 3 2 1 0 1]{Type=CapTxt;
}
Char[3 0 3 2 3 2 1 0 1 0]{CntInfo='src/main/vhdl/examples/bubble_sorter/bubble_sorter.vhd';
CntSty={
ParSty='テキスト枠見出し';
};
}
Basic[3 0 3 2 3 3]{Type=Txt;
}
Char[3 0 3 2 3 3 0]{CntInfo='';
}
Basic[3 0 3 2 3 4]{Type=Txt;
}
Char[3 0 3 2 3 4 0]{CntInfo='入力された I_DATA と I_ATRB を[「ワードの定義」]で指定されたワード形式に変換します。';
}
Comp[3 0 3 2 3 5]{Type=Fig;
Ctgry=FigInBdy;
FigAttr={
FrmLineVis=[on on on on];
DimType=[on on];
TxtArea=[on off off off];
LineAlign=Ctrd;
Dim=[16916 8992];
TxtAreaSize=[353 0 0 0];
};
}
Comp[3 0 3 2 3 5 0]{Type=Art;
Ctgry=StdInArt;
}
Basic[3 0 3 2 3 5 0 0]{Type=ArtTxt;
}
Char[3 0 3 2 3 5 0 0 0]{CntInfo='    process (I_DATA, I_ATRB)
        variable   data     :  std_logic_vector(DATA_BITS-1 downto 0);
        variable   atrb     :  std_logic_vector(ATRB_BITS-1 downto 0);
        variable   word     :  std_logic_vector(WORD_PARAM.BITS-1 downto 0);
    begin
        for i in 0 to WORDS-1 loop
            data := I_DATA((i+1)*DATA_BITS-1 downto i*DATA_BITS);
            atrb := I_ATRB((i+1)*ATRB_BITS-1 downto i*ATRB_BITS);
            word(WORD_PARAM.DATA_HI downto WORD_PARAM.DATA_LO) := data;
            word(WORD_PARAM.ATRB_NONE_POS    ) := atrb(0);
            word(WORD_PARAM.ATRB_PRIORITY_POS) := atrb(1);
            word(WORD_PARAM.ATRB_POSTPEND_POS) := atrb(2);
            i_word((i+1)*WORD_PARAM.BITS-1 downto i*WORD_PARAM.BITS) \<= word;
        end loop;
    end process;
';
CntSty={
ParSty='VHDL';
};
}
Comp[3 0 3 2 3 5 1]{Type=Desc;
Ctgry=StdInTCap;
}
Comp[3 0 3 2 3 5 1 0]{Type=Cap;
Ctgry=FigTtlInBdy;
}
Basic[3 0 3 2 3 5 1 0 0]{Type=CapNo;
Ctgry=Discard;
}
Char[3 0 3 2 3 5 1 0 0 0]{CntInfo=' ';
}
Basic[3 0 3 2 3 5 1 0 1]{Type=CapTxt;
}
Char[3 0 3 2 3 5 1 0 1 0]{CntInfo='src/main/vhdl/examples/bubble_sorter/bubble_sorter.vhd';
CntSty={
ParSty='テキスト枠見出し';
};
}
Basic[3 0 3 2 3 6]{Type=Txt;
}
Char[3 0 3 2 3 6 0]{CntInfo='';
}
Basic[3 0 3 2 3 7]{Type=Txt;
}
Char[3 0 3 2 3 7 0]{CntInfo='前節で説明した Bubble_Sort_Network.New_Network 関数を使ってバブルソートのソーティングネットワークを構築して[「ソーティングネットワーク」]で説明した Sorting_Network_Core に渡します。これにでバブルソートを行うソーティングネットワークが出来ます。';
}
Comp[3 0 3 2 3 8]{Type=Fig;
Ctgry=FigInBdy;
FigAttr={
FrmLineVis=[on on on on];
DimType=[on on];
TxtArea=[on off off off];
LineAlign=Ctrd;
Dim=[16916 14616];
TxtAreaSize=[353 0 0 0];
};
}
Comp[3 0 3 2 3 8 0]{Type=Art;
Ctgry=StdInArt;
}
Basic[3 0 3 2 3 8 0 0]{Type=ArtTxt;
}
Char[3 0 3 2 3 8 0 0 0]{CntInfo='    CORE: Sorting_Network_Core
        generic map (
            NETWORK_PARAM   => Bubble_Sort_Network.New_Network(
                                   LO    => 0,
                                   HI    => WORDS-1,
                                   ORDER => SORT_ORDER,
                                   QUEUE => Sorting_Network.Constant_Queue_Size(QUEUE_SIZE)
                               ),
            WORD_PARAM      => WORD_PARAM      , -- 
            INFO_BITS       => INFO_BITS         -- 
        )                                        -- 
        port map (                               -- 
            CLK             => CLK             , -- In  :
            RST             => RST             , -- In  :
            CLR             => CLR             , -- In  :
            I_WORD          => i_word          , -- In  :
            I_INFO          => I_INFO          , -- In  :
            I_VALID         => I_VALID         , -- In  :
            I_READY         => I_READY         , -- Out :
            O_WORD          => o_word          , -- Out :
            O_INFO          => O_INFO          , -- Out :
            O_VALID         => O_VALID         , -- Out :
            O_READY         => O_READY         , -- In  :
            BUSY            => BUSY              -- Out :
        );';
CntSty={
ParSty='VHDL';
};
}
Comp[3 0 3 2 3 8 1]{Type=Desc;
Ctgry=StdInTCap;
}
Comp[3 0 3 2 3 8 1 0]{Type=Cap;
Ctgry=FigTtlInBdy;
}
Basic[3 0 3 2 3 8 1 0 0]{Type=CapNo;
Ctgry=Discard;
}
Char[3 0 3 2 3 8 1 0 0 0]{CntInfo=' ';
}
Basic[3 0 3 2 3 8 1 0 1]{Type=CapTxt;
}
Char[3 0 3 2 3 8 1 0 1 0]{CntInfo='src/main/vhdl/examples/bubble_sorter/bubble_sorter.vhd';
CntSty={
ParSty='テキスト枠見出し';
};
}
Basic[3 0 3 2 3 9]{Type=Txt;
}
Char[3 0 3 2 3 9 0]{CntInfo='';
}
Basic[3 0 3 2 3 10]{Type=Txt;
LaySty={
NLO=page;
};
}
Char[3 0 3 2 3 10 0]{CntInfo='最後にソート結果を O_WORD と O_ATRB に変換して出力します。';
}
Comp[3 0 3 2 3 11]{Type=Fig;
Ctgry=FigInBdy;
FigAttr={
FrmLineVis=[on on on on];
DimType=[on on];
TxtArea=[on off off off];
LineAlign=Ctrd;
Dim=[16916 9794];
TxtAreaSize=[353 0 0 0];
};
}
Comp[3 0 3 2 3 11 0]{Type=Art;
Ctgry=StdInArt;
}
Basic[3 0 3 2 3 11 0 0]{Type=ArtTxt;
}
Char[3 0 3 2 3 11 0 0 0]{CntInfo='    process (o_word)
        variable   data     :  std_logic_vector(DATA_BITS-1 downto 0);
        variable   atrb     :  std_logic_vector(ATRB_BITS-1 downto 0);
        variable   word     :  std_logic_vector(WORD_PARAM.BITS-1 downto 0);
    begin
        for i in 0 to WORDS-1 loop
            word := o_word((i+1)*WORD_PARAM.BITS-1 downto i*WORD_PARAM.BITS);
            data := word(WORD_PARAM.DATA_HI downto WORD_PARAM.DATA_LO);
            atrb    := (others => \'0\');
            atrb(0) := word(WORD_PARAM.ATRB_NONE_POS    );
            atrb(1) := word(WORD_PARAM.ATRB_PRIORITY_POS);
            atrb(2) := word(WORD_PARAM.ATRB_POSTPEND_POS);
            O_DATA((i+1)*DATA_BITS-1 downto i*DATA_BITS) \<= data;
            O_ATRB((i+1)*ATRB_BITS-1 downto i*ATRB_BITS) \<= atrb;
        end loop;
    end process;
end RTL;
';
CntSty={
ParSty='VHDL';
};
}
Comp[3 0 3 2 3 11 1]{Type=Desc;
Ctgry=StdInTCap;
}
Comp[3 0 3 2 3 11 1 0]{Type=Cap;
Ctgry=FigTtlInBdy;
}
Basic[3 0 3 2 3 11 1 0 0]{Type=CapNo;
Ctgry=Discard;
}
Char[3 0 3 2 3 11 1 0 0 0]{CntInfo=' ';
}
Basic[3 0 3 2 3 11 1 0 1]{Type=CapTxt;
}
Char[3 0 3 2 3 11 1 0 1 0]{CntInfo='src/main/vhdl/examples/bubble_sorter/bubble_sorter.vhd';
CntSty={
ParSty='テキスト枠見出し';
};
}
Basic[3 0 3 2 3 12]{Type=Txt;
}
Char[3 0 3 2 3 12 0]{CntInfo='';
}
Comp[3 0 4]{Type=NoSeg;
}
Comp[3 0 4 0]{Type=Ttl;
Ctgry=TtlInBdy;
ULayedPageNo=10;
}
Basic[3 0 4 0 0]{Type=TtlNo;
Ctgry=Discard;
}
Char[3 0 4 0 0 0]{CntInfo=' ';
}
Basic[3 0 4 0 1]{Type=TtlTxt;
}
Char[3 0 4 0 1 0]{CntInfo='参照';
CntSty={
ParSty='レベル２見出し';
};
}
Basic[3 0 4 1]{Type=Txt;
}
Char[3 0 4 1 0]{CntInfo='・目次: [「はじめに」]';
CntSty={
ParSty='本文箇条書きレベル１';
Align=Start;
};
}
Basic[3 0 4 2]{Type=Txt;
}
Char[3 0 4 2 0]{CntInfo='・参考: [「ソーティングネットワーク」]';
CntSty={
ParSty='本文箇条書きレベル１';
Align=Start;
};
}
Basic[3 0 4 3]{Type=Txt;
}
Char[3 0 4 3 0]{CntInfo='・ソースコード:
https://github.com/ikwzm/Merge_Sorter/blob/1.4.1/src/main/vhdl/core/sorting_network.vhd
https://github.com/ikwzm/Merge_Sorter/blob/1.4.1/src/main/vhdl/core/bubble_sort_network.vhd
https://github.com/ikwzm/Merge_Sorter/blob/1.4.1/src/main/vhdl/examples/bubble_sorter/bubble_sorter.vhd';
CntSty={
ParSty='本文箇条書きレベル１';
Align=Start;
};
}
Basic[3 0 4 4]{Type=Txt;
}
Char[3 0 4 4 0]{CntInfo='・出典: [Wikipedia/Bubble_Sort]';
CntSty={
ParSty='本文箇条書きレベル１';
Align=Start;
};
}
