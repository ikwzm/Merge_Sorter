Fuji Xerox Clear Text Encoding Format Version 3.00
Creator:Akane
Encoding:SJISコード
% OS:WindowsNT 6.2

Profile{NoOfPages=10;
Comments='マークダウン・テンプレート';
ExtrTtlRef={
};
}
Sty{
Name='本文';
Comments='本文';
BasicStyBdy={
PageSty={
PageSet=SprdPage;
FstPageType=on;
RelCharNo=48;
RelLineNo=41;
RelHorMgnType=inner;
RelHorMgn=2500;
AbsMgn=[2000 2000 2000 2000];
FFace='メイリオ';
FSize=10;
IntrLineH=800;
Mgn=[0 0 1100 0];
};
HdrSty={
Name='ヘッダー(左)';
PageType=LPageOnly;
Loc=TL;
FFace='メイリオ';
HdrType=PageHdr;
HdrForm=on;
HdrRefLevel=2;
};
HdrSty={
Name='ヘッダー(右)';
PageType=RPageOnly;
Loc=TR;
FFace='メイリオ';
HdrType=PageHdr;
HdrForm=on;
HdrRefLevel=3;
};
HdrSty={
Name='ヘッダー';
PageType=SymmPage;
Loc=TR;
FFace='メイリオ';
HdrType=PageHdr;
HdrForm=on;
HdrPat='DATA SHEET';
HdrRefCnt=16;
};
HdrSty={
Name='ヘッダー罫線';
PageType=SymmPage;
Loc=TL;
Ofst=[0 700];
FFace='ＭＳ ゴシック' Bld;
FSize=10;
HdrType=PageHdr;
HdrPat='━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━';
};
HdrSty={
Name='ページ番号';
PageType=SymmPage;
Loc=BL;
FFace='メイリオ';
FSize=10;
PageNoRefLoc=outer;
};
HdrSty={
Name='フッター';
PageType=SymmPage;
Loc=BR;
FFace='メイリオ';
FSize=10;
HdrType=PageHdr;
};
HdrSty={
Name='フッター罫線';
PageType=SymmPage;
Loc=BL;
Ofst=[0 -700];
FFace='ＭＳ ゴシック' Bld;
FSize=10;
HdrType=PageHdr;
HdrPat='━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━';
};
NoteSty={
ClmW=10;
Name='注段落スタイル';
RT=2;
};
TtlSty1={
Area=FullClm;
Name='レベル１見出し';
FrmDimType=[max Var];
FrmDim=[3429 0];
IMgn=[800 100 0 0];
NLO=page;
NBH=page;
SepStr=' ';
NoType=none;
FrmLineW=35;
FrmLineVis=[off off on on];
};
TtlSty2={
Area=FullClm;
Name='レベル２見出し';
FrmDimType=[max Var];
FrmDim=[4005 0];
IMgn=[800 100 0 0];
NLO=page;
NBH=page;
SepStr=' ';
NoType=none;
PreNo=off;
FrmLineW=35;
FrmLineVis=[off off on on];
};
TtlSty3={
Name='レベル３見出し';
FrmDimType=[max Var];
FrmDim=[4367 0];
NBH=null;
SepStr=' ';
NoType=none;
};
TtlSty4={
Name='レベル４見出し';
FrmDimType=[max Var];
FrmDim=[4367 0];
SepStr=' ';
NoType=none;
PreNo=off;
};
TtlStyTxt={
Name='テキスト枠見出し';
SepStr=' ';
RT=0;
};
TtlStyGeo={
Name='図形枠見出し';
PrfxStr='Fig.';
SepStr=' ';
PreNo=on;
DivStr='-';
};
TtlStyTbl={
Name='表組枠見出し';
ClmAlign=Ctrd;
PrfxStr='Table.';
SepStr=' ';
PreNo=on;
DivStr='-';
};
};
ParStyBdy={
ParSty={
Name='レベル１見出し';
FFace='メイリオ';
FSize=14;
IntrLineH=500;
Align=Start;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=0;
};
ParSty={
Name='レベル２見出し';
FFace='メイリオ';
FSize=12;
IntrLineH=800;
Align=Start;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=0;
};
ParSty={
Name='レベル３見出し';
FFace='メイリオ';
FSize=11;
IntrLineH=800;
Align=Start;
MgnUt=Pt;
Mgn=[0 0 0 0];
FstLineOfstUt=Pt;
FstLineOfst=0;
};
ParSty={
Name='段落スタイル';
Tab={
TabPos=400;
};
Tab={
TabPos=800;
};
Tab={
TabPos=1200;
};
Tab={
TabPos=1600;
};
Tab={
TabPos=2000;
};
Tab={
TabPos=2400;
};
Tab={
TabPos=2800;
};
Tab={
TabPos=3200;
};
};
ParSty={
Name='表枠内段落スタイル';
FFace='メイリオ';
FSize=10;
IntrLineH=600;
Align=Start;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=0;
IndtUt=Char;
Indt=0;
Tab={
TabPos=400;
};
Tab={
TabPos=800;
};
Tab={
TabPos=1200;
};
Tab={
TabPos=1600;
};
Tab={
TabPos=2000;
};
Tab={
TabPos=2400;
};
Tab={
TabPos=2800;
};
Tab={
TabPos=3200;
};
Tab={
TabPos=3600;
};
Tab={
TabPos=4000;
};
Tab={
TabPos=4400;
};
Tab={
TabPos=4800;
};
Tab={
TabPos=5200;
};
Tab={
TabPos=5600;
};
Tab={
TabPos=6000;
};
Tab={
TabPos=6400;
};
};
ParSty={
Name='表組枠内段落スタイル';
FSize=10;
IntrLineH=600;
Align=Start;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=0;
IndtUt=Char;
Indt=0;
Tab={
TabPos=400;
};
Tab={
TabPos=800;
};
Tab={
TabPos=1200;
};
Tab={
TabPos=1600;
};
Tab={
TabPos=2000;
};
Tab={
TabPos=2400;
};
Tab={
TabPos=2800;
};
Tab={
TabPos=3200;
};
Tab={
TabPos=3600;
};
Tab={
TabPos=4000;
};
Tab={
TabPos=4400;
};
Tab={
TabPos=4800;
};
Tab={
TabPos=5200;
};
Tab={
TabPos=5600;
};
Tab={
TabPos=6000;
};
Tab={
TabPos=6400;
};
};
ParSty={
Name='表組枠見出し';
FSize=10;
Align=Ctrd;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=0;
IndtUt=Char;
Indt=0;
};
ParSty={
Name='本文箇条書きレベル１';
FstLineOfstUt=Char;
FstLineOfst=0;
IndtUt=Char;
Indt=100;
Tab={
TabPos=400;
};
Tab={
TabPos=800;
};
Tab={
TabPos=1200;
};
Tab={
TabPos=1600;
};
Tab={
TabPos=2000;
};
Tab={
TabPos=2400;
};
Tab={
TabPos=2800;
};
Tab={
TabPos=3200;
};
};
ParSty={
Name='本文箇条書きレベル２';
FstLineOfstUt=Char;
FstLineOfst=400;
IndtUt=Char;
Indt=500;
};
ParSty={
Name='表組枠内箇条書きレベル１';
FSize=10;
IntrLineH=600;
Align=Start;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=0;
IndtUt=Char;
Indt=100;
};
ParSty={
Name='図形枠見出し';
FFace='メイリオ';
FSize=10;
Align=Ctrd;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=0;
IndtUt=Char;
Indt=0;
};
ParSty={
Name='コラム内本文段落スタイル';
FSize=10;
Align=Start;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=100;
IndtUt=Char;
Indt=0;
};
ParSty={
Name='本文段落スタイル';
MgnUt=Char;
Mgn=[0 100 1100 0];
Tab={
TabPos=400;
};
Tab={
TabPos=800;
};
Tab={
TabPos=1200;
};
Tab={
TabPos=1600;
};
Tab={
TabPos=2000;
};
Tab={
TabPos=2400;
};
Tab={
TabPos=2800;
};
Tab={
TabPos=3200;
};
};
ParSty={
Name='注段落スタイル';
FSize=9;
Align=Just;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=0;
IndtUt=Char;
Indt=400;
};
ParSty={
Name='レベル４見出し';
FSize=11;
Align=Start;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=0;
IndtUt=Char;
Indt=0;
};
ParSty={
Name='図形枠内段落';
FFace='Meiryo UI';
FSize=10;
FColr=[0 0 0];
IntrLineH=0;
Align=Ctrd;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=0;
IndtUt=Char;
Indt=0;
};
ParSty={
Name='Makefile';
FFace='Ricty';
FSize=10;
FColr=[0 0 0];
IntrLineH=600;
Align=Start;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=0;
Tab={
TabPos=800;
};
Tab={
TabPos=1600;
};
};
ParSty={
Name='C';
FFace='Ricty';
FSize=10;
FColr=[0 0 0];
IntrLineH=600;
Align=Start;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=0;
Tab={
TabPos=200;
};
Tab={
TabPos=400;
};
Tab={
TabPos=600;
};
Tab={
TabPos=800;
};
Tab={
TabPos=1000;
};
Tab={
TabPos=1200;
};
Tab={
TabPos=1400;
};
Tab={
TabPos=1600;
};
};
ParSty={
Name='VHDL';
FFace=156;
FSize=10;
FColr=[0 0 0];
IntrLineH=600;
Align=Start;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=0;
Tab={
TabPos=200;
};
Tab={
TabPos=400;
};
Tab={
TabPos=600;
};
Tab={
TabPos=800;
};
Tab={
TabPos=1000;
};
Tab={
TabPos=1200;
};
Tab={
TabPos=1400;
};
Tab={
TabPos=1600;
};
Tab={
TabPos=1800;
};
Tab={
TabPos=2000;
};
Tab={
TabPos=2200;
};
Tab={
TabPos=2400;
};
Tab={
TabPos=2600;
};
Tab={
TabPos=2800;
};
Tab={
TabPos=3000;
};
Tab={
TabPos=3200;
};
};
ParSty={
Name='Python';
FFace='Ricty';
FSize=10;
FColr=[0 0 0];
IntrLineH=600;
Align=Start;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=0;
Tab={
TabPos=200;
};
Tab={
TabPos=400;
};
Tab={
TabPos=600;
};
Tab={
TabPos=800;
};
Tab={
TabPos=1000;
};
Tab={
TabPos=1200;
};
Tab={
TabPos=1400;
};
Tab={
TabPos=1600;
};
Tab={
TabPos=1800;
};
Tab={
TabPos=2000;
};
Tab={
TabPos=2200;
};
Tab={
TabPos=2400;
};
Tab={
TabPos=2600;
};
Tab={
TabPos=2800;
};
Tab={
TabPos=3000;
};
Tab={
TabPos=3200;
};
};
ParSty={
Name='devicetree';
FFace='Ricty';
FSize=10;
FColr=[0 0 0];
IntrLineH=600;
Align=Start;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=0;
Tab={
TabPos=800;
};
Tab={
TabPos=1600;
};
};
ParSty={
Name='Shell';
FFace='Ricty';
FSize=10;
FColr=[0 0 0];
IntrLineH=600;
Align=Start;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=0;
};
ParSty={
Name='console';
FFace='Ricty';
FSize=10;
FColr=[0 0 0];
IntrLineH=600;
Align=Start;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=0;
};
ParSty={
Name='テキスト枠見出し';
FFace='Ricty';
FSize=10;
FColr=[0 0 0];
IntrLineH=800;
Align=Start;
MgnUt=Char;
Mgn=[0 0 0 0];
FstLineOfstUt=Char;
FstLineOfst=0;
};
};
}
Root[3]{}
Comp[3 0]{Type=NoSeg;
}
Comp[3 0 0]{Type=Ttl;
Ctgry=TtlInBdy;
ULayedPageNo=1;
}
Basic[3 0 0 0]{Type=TtlNo;
Ctgry=Discard;
}
Char[3 0 0 0 0]{CntInfo=' ';
}
Basic[3 0 0 1]{Type=TtlTxt;
}
Char[3 0 0 1 0]{CntInfo='VHDL で書くソーティングネットワーク(バブルソート)';
CntSty={
ParSty='レベル１見出し';
};
}
Comp[3 0 1]{Type=NoSeg;
}
Comp[3 0 1 0]{Type=Ttl;
Ctgry=TtlInBdy;
ULayedPageNo=1;
}
Basic[3 0 1 0 0]{Type=TtlNo;
Ctgry=Discard;
}
Char[3 0 1 0 0 0]{CntInfo=' ';
}
Basic[3 0 1 0 1]{Type=TtlTxt;
}
Char[3 0 1 0 1 0]{CntInfo='はじめに';
CntSty={
ParSty='レベル２見出し';
};
}
Basic[3 0 1 1]{Type=Txt;
}
Char[3 0 1 1 0]{CntInfo='筆者はかつて「VHDL で書くマージソーター」という題で幾つか記事を書きました。マージソーターを実装する際に、ソーティングネットワークを VHDL で書く必要がありました。これらの詳細は以下の記事を参照してください。';
}
Basic[3 0 1 2]{Type=Txt;
}
Char[3 0 1 2 0]{CntInfo='';
}
Basic[3 0 1 3]{Type=Txt;
}
Char[3 0 1 3 0]{CntInfo='・[「VHDL で書くマージソーター(はじめに)」]';
CntSty={
ParSty='本文箇条書きレベル１';
};
}
Basic[3 0 1 4]{Type=Txt;
}
Char[3 0 1 4 0]{CntInfo='・[「VHDL で書くソーティングネットワーク(コアパッケージ)」]';
CntSty={
ParSty='本文箇条書きレベル１';
};
}
Basic[3 0 1 5]{Type=Txt;
}
Char[3 0 1 5 0]{CntInfo='・[「VHDL で書くソーティングネットワーク(バイトニックマージソート)」]';
CntSty={
ParSty='本文箇条書きレベル１';
};
}
Basic[3 0 1 6]{Type=Txt;
}
Char[3 0 1 6 0]{CntInfo='・[「VHDL で書くソーティングネットワーク(バッチャー奇偶マージソート)」]';
CntSty={
ParSty='本文箇条書きレベル１';
};
}
Basic[3 0 1 7]{Type=Txt;
}
Char[3 0 1 7 0]{CntInfo='';
}
Basic[3 0 1 8]{Type=Txt;
}
Char[3 0 1 8 0]{CntInfo='この記事は、上の記事のスピンオフ編で、[「VHDL で書くソーティングネットワーク(コアパッケージ)」]を使ってバブルソート回路を構成する方法を紹介します。';
}
Basic[3 0 1 9]{Type=Txt;
}
Char[3 0 1 9 0]{CntInfo='';
CntSty={
ParSty='本文箇条書きレベル１';
};
}
Comp[3 0 2]{Type=NoSeg;
}
Comp[3 0 2 0]{Type=Ttl;
Ctgry=TtlInBdy;
LaySty={
NLO=null;
};
ULayedPageNo=1;
}
Basic[3 0 2 0 0]{Type=TtlNo;
Ctgry=Discard;
}
Char[3 0 2 0 0 0]{CntInfo=' ';
}
Basic[3 0 2 0 1]{Type=TtlTxt;
}
Char[3 0 2 0 1 0]{CntInfo='バブルソートとは';
CntSty={
ParSty='レベル２見出し';
};
}
Basic[3 0 2 1]{Type=Txt;
}
Char[3 0 2 1 0]{CntInfo='バブルソート(Bubble sort) は、隣り合う要素の大小を比較しながら整列させるソートアルゴリズムです。アルゴリズムが比較的単純で実装も容易ですが、最悪計算量がO(n**2)と遅いため、一般にはマージソートなどより最悪時間計算量の小さな方法が利用されます。(出典:[https://wikipedia.org/wiki/Bubble_sort])。';
}
Basic[3 0 2 2]{Type=Txt;
}
Char[3 0 2 2 0]{CntInfo='';
}
Basic[3 0 2 3]{Type=Txt;
}
Char[3 0 2 3 0]{CntInfo='以下に Python で記述したバブルソートの実装例を示します。';
CntSty={
Align=Start;
};
}
Comp[3 0 2 4]{Type=Fig;
Ctgry=FigInBdy;
FigAttr={
FrmLineVis=[on on on on];
DimType=[on on];
TxtArea=[on off off off];
LineAlign=Ctrd;
Dim=[16916 3672];
TxtAreaSize=[353 0 0 0];
};
}
Comp[3 0 2 4 0]{Type=Art;
Ctgry=StdInArt;
}
Basic[3 0 2 4 0 0]{Type=ArtTxt;
}
Char[3 0 2 4 0 0 0]{CntInfo='def bubble_sort(data):
    for i in range(0,len(data)-1):
        for j in reversed(range(i,len(data)-1)):
            if data[j+1] > data[j]:
                data[j],data[j+1] = data[j+1],data[j]
    return data
   ';
CntSty={
ParSty='Python';
};
}
Comp[3 0 2 4 1]{Type=Desc;
Ctgry=StdInTCap;
}
Comp[3 0 2 4 1 0]{Type=Cap;
Ctgry=FigTtlInBdy;
}
Basic[3 0 2 4 1 0 0]{Type=CapNo;
Ctgry=Discard;
}
Char[3 0 2 4 1 0 0 0]{CntInfo=' ';
}
Basic[3 0 2 4 1 0 1]{Type=CapTxt;
}
Char[3 0 2 4 1 0 1 0]{CntInfo='bubble_sort.py';
CntSty={
ParSty='テキスト枠見出し';
};
}
Basic[3 0 2 5]{Type=Txt;
}
Char[3 0 2 5 0]{CntInfo='';
}
Basic[3 0 2 6]{Type=Txt;
}
Char[3 0 2 6 0]{CntInfo='これをそのままソーティングネットワークにすると次のようになります。';
}
Comp[3 0 2 7]{Type=Fig;
Ctgry=FigInBdy;
FigAttr={
DimType=[on on];
TxtArea=[off on off off];
LineAlign=Ctrd;
IMgn=[0 0 0 0];
Dim=[17000 5641];
TxtAreaSize=[0 353 0 0];
};
}
Comp[3 0 2 7 0]{Type=Art;
Ctgry=StdInArt;
}
Basic[3 0 2 7 0 0]{}
Geo[3 0 2 7 0 0 0]{CntInfo={
BEGMF 'interchangeV2';
mfversion 1;
mfdesc 'Akane V2.0';
vdctype int;
integerprec -32767 32767;
colrprec 255;
colrvalext 0 0 0 255 255 255;
mfelemlist 'drawingplus';
BEGPIC;
colrmode direct;
linewidthmode abs;
markersizemode abs;
edgewidthmode abs;
vdcext (0 0)(8031 2665);
BEGPICBODY;
vdcintegerprec -32767 32767;
cliprect (0 0)(8031 2665);
clip on;
asf all indiv;
appldata 5 0 0 400 0 0 0 0 0 0 0 0 0 0 1 0;
BEGPLANE 0 '';
linewidth 34;
line (945 378)(7748 378);
line (945 756)(7748 756);
line (945 1134)(7748 1134);
line (945 1512)(7748 1512);
line (945 1890)(7747 1890);
line (945 2268)(7747 2268);
lineendcap 5;
line (2079 1512)(2079 1134);
line (1701 1890)(1701 1512);
line (1323 2268)(1323 1890);
edgewidth 9;
edgetype 3;
intstyle empty;
rect (1134 189)(1512 2457)(0 1);
line (2457 1134)(2457 756);
line (2835 756)(2835 378);
line (3403 2268)(3403 1890);
line (3781 1890)(3781 1512);
line (4159 1512)(4159 1134);
line (4537 1134)(4537 756);
line (5103 2268)(5103 1890);
line (5480 1890)(5480 1512);
line (5858 1512)(5858 1134);
line (6425 2268)(6425 1890);
line (6803 1890)(6803 1512);
rect (1512 189)(1890 2457)(0 1);
rect (1890 189)(2268 2457)(0 1);
rect (2268 189)(2646 2457)(0 1);
rect (2646 189)(3024 2457)(0 1);
rect (3214 189)(3592 2457)(0 1);
rect (3592 189)(3970 2457)(0 1);
rect (3970 189)(4348 2457)(0 1);
rect (4347 189)(4725 2457)(0 1);
rect (4913 189)(5291 2457)(0 1);
rect (5291 189)(5669 2457)(0 1);
rect (5669 189)(6047 2457)(0 1);
rect (6236 189)(6614 2457)(0 1);
rect (6614 189)(6992 2457)(0 1);
line (7370 2268)(7370 1890);
rect (7181 189)(7559 2457)(0 1);
figpos (336 295);
figpos (336 673);
figpos (336 1051);
figpos (336 1429);
figpos (336 1807);
figpos (336 2185);
ENDPLANE;
ENDPIC;
ENDMF;
};
}
Comp[3 0 2 7 0 0 0 0]{Type=Fig;
Ctgry=Nest;
FigAttr={
IMgn=[0 0 0 0];
Dim=[1291 353];
};
}
Basic[3 0 2 7 0 0 0 0 0]{Type=ArtTxt;
}
Char[3 0 2 7 0 0 0 0 0 0]{CntInfo='data[0]';
CntSty={
ParSty='図形枠内段落';
};
}
Comp[3 0 2 7 0 0 0 1]{Type=Fig;
Ctgry=Nest;
FigAttr={
IMgn=[0 0 0 0];
Dim=[1291 353];
};
}
Basic[3 0 2 7 0 0 0 1 0]{Type=ArtTxt;
}
Char[3 0 2 7 0 0 0 1 0 0]{CntInfo='data[1]';
CntSty={
ParSty='図形枠内段落';
};
}
Comp[3 0 2 7 0 0 0 2]{Type=Fig;
Ctgry=Nest;
FigAttr={
IMgn=[0 0 0 0];
Dim=[1291 353];
};
}
Basic[3 0 2 7 0 0 0 2 0]{Type=ArtTxt;
}
Char[3 0 2 7 0 0 0 2 0 0]{CntInfo='data[2]';
CntSty={
ParSty='図形枠内段落';
};
}
Comp[3 0 2 7 0 0 0 3]{Type=Fig;
Ctgry=Nest;
FigAttr={
IMgn=[0 0 0 0];
Dim=[1291 353];
};
}
Basic[3 0 2 7 0 0 0 3 0]{Type=ArtTxt;
}
Char[3 0 2 7 0 0 0 3 0 0]{CntInfo='data[3]';
CntSty={
ParSty='図形枠内段落';
};
}
Comp[3 0 2 7 0 0 0 4]{Type=Fig;
Ctgry=Nest;
FigAttr={
IMgn=[0 0 0 0];
Dim=[1291 353];
};
}
Basic[3 0 2 7 0 0 0 4 0]{Type=ArtTxt;
}
Char[3 0 2 7 0 0 0 4 0 0]{CntInfo='data[4]';
CntSty={
ParSty='図形枠内段落';
};
}
Comp[3 0 2 7 0 0 0 5]{Type=Fig;
Ctgry=Nest;
FigAttr={
IMgn=[0 0 0 0];
Dim=[1291 353];
};
}
Basic[3 0 2 7 0 0 0 5 0]{Type=ArtTxt;
}
Char[3 0 2 7 0 0 0 5 0 0]{CntInfo='data[5]';
CntSty={
ParSty='図形枠内段落';
};
}
Comp[3 0 2 7 1]{Type=Desc;
Ctgry=StdInBCap;
}
Comp[3 0 2 7 1 0]{Type=Cap;
Ctgry=FigTtlInBdy;
}
Basic[3 0 2 7 1 0 0]{Type=CapNo;
Ctgry=Discard;
}
Char[3 0 2 7 1 0 0 0]{CntInfo='Fig.1 ';
}
Basic[3 0 2 7 1 0 1]{Type=CapTxt;
}
Char[3 0 2 7 1 0 1 0]{CntInfo='バブルソートのソーティングネットワーク例(最適化前)';
CntSty={
ParSty='図形枠見出し';
};
}
Basic[3 0 2 8]{Type=Txt;
}
Char[3 0 2 8 0]{CntInfo='ただし、このままだとステージ(ソーティングネットワークを並列処理可能な単位に分割したもの。上の図で網線に囲まれた部分が１ステージに相当する。この数が多いほど遅延が大きくなる)の数がコンパレーターの数と同じ数になってしまいます。具体的には、要素数n としてステージ数は (n×(n-1)÷2) となり、O(n**2)で増加します。';
}
Basic[3 0 2 9]{Type=Txt;
}
Char[3 0 2 9 0]{CntInfo='そこで次の図のように並列処理が可能なステージを一つにまとめてしまいます。これにより、バブルソートのソーティングネットワークのステージ数は 2n-3 (=(n-1)+(n-2)) になります。';
}
Comp[3 0 2 10]{Type=Fig;
Ctgry=FigInBdy;
FigAttr={
DimType=[on on];
TxtArea=[off on off off];
LineAlign=Ctrd;
IMgn=[0 0 0 0];
Dim=[17000 12016];
TxtAreaSize=[0 353 0 0];
};
}
Comp[3 0 2 10 0]{Type=Art;
Ctgry=StdInArt;
}
Basic[3 0 2 10 0 0]{}
Geo[3 0 2 10 0 0 0]{CntInfo={
BEGMF 'interchangeV2';
mfversion 1;
mfdesc 'Akane V2.0';
vdctype int;
integerprec -32767 32767;
colrprec 255;
colrvalext 0 0 0 255 255 255;
mfelemlist 'drawingplus';
BEGPIC;
colrmode direct;
linewidthmode abs;
markersizemode abs;
edgewidthmode abs;
vdcext (0 0)(8031 5677);
BEGPICBODY;
vdcintegerprec -32767 32767;
cliprect (0 0)(8031 5677);
clip on;
asf all indiv;
appldata 5 0 0 400 0 0 0 0 0 0 0 0 0 0 1 0;
BEGPLANE 0 '';
linewidth 34;
line (946 377)(7749 377);
line (946 755)(7749 755);
line (946 1133)(7749 1133);
line (946 1511)(7749 1511);
line (946 1889)(7748 1889);
line (946 2267)(7748 2267);
lineendcap 5;
line (2080 1511)(2080 1133);
line (1702 1889)(1702 1511);
line (1324 2267)(1324 1889);
edgewidth 9;
edgetype 3;
intstyle empty;
rect (1135 188)(1513 2456)(0 1);
line (2458 1133)(2458 755);
line (2836 755)(2836 377);
line (3404 2267)(3404 1889);
line (3782 1889)(3782 1511);
line (4160 1511)(4160 1133);
line (4538 1133)(4538 755);
line (5104 2267)(5104 1889);
line (5481 1889)(5481 1511);
line (5859 1511)(5859 1133);
line (6426 2267)(6426 1889);
line (6804 1889)(6804 1511);
rect (1513 188)(1891 2456)(0 1);
line (7371 2267)(7371 1889);
polygon (1891 188)(2269 188)(2269 1700)(3592 1700)(3592 2456)(3214 2456)(3214 2078)(1891 2078);
polygon (2269 188)(2647 188)(2647 1322)(3970 1322)(3970 2456)(3592 2456)(3592 1700)(2269 1700);
polygon (3025 188)(3025 944)(4348 944)(4348 1700)(5292 1700)(5292 2456)(4914 2456)(4914 2078)(3970 2078)(3970 1322)(2647 1322)(2647 188);
polygon (4726 188)(4726 1322)(5670 1322)(5670 2456)(5292 2456)(5292 1700)(4348 1700)(4348 188);
polygon (6048 188)(6048 1322)(6615 1322)(6615 2456)(6237 2456)(6237 1700)(5670 1700)(5670 188);
rect (6615 188)(6993 2456)(0 1);
rect (7182 188)(7560 2456)(0 1);
lineendcap 1;
line (946 3401)(7749 3401);
line (946 3779)(7749 3779);
line (946 4157)(7749 4157);
line (946 4535)(7749 4535);
line (946 4913)(7748 4913);
line (946 5291)(7748 5291);
lineendcap 5;
line (3781 4535)(3781 4157);
line (3403 4913)(3403 4535);
line (3025 5291)(3025 4913);
line (4159 4157)(4159 3779);
line (4537 3779)(4537 3401);
line (3781 5290)(3781 4912);
line (4159 4912)(4159 4534);
line (4537 4534)(4537 4156);
line (4537 5290)(4537 4912);
line (4914 4156)(4914 3778);
line (4914 4912)(4914 4534);
line (5292 4534)(5292 4156);
line (5292 5290)(5292 4912);
line (5670 4912)(5670 4534);
line (6048 5290)(6048 4912);
rect (2836 3211)(3214 5479)(0 1);
rect (3214 3211)(3592 5479)(0 1);
rect (3592 3211)(3970 5479)(0 1);
rect (3970 3211)(4348 5479)(0 1);
rect (4348 3211)(4726 5479)(0 1);
rect (4725 3211)(5103 5479)(0 1);
rect (5103 3211)(5481 5479)(0 1);
rect (5481 3211)(5859 5479)(0 1);
rect (5859 3211)(6237 5479)(0 1);
linetype 3;
linewidth 9;
line (1324 2456)(1324 3023)(3025 3023)(3025 3212);
line (1702 2456)(1702 2834)(3403 2834)(3403 3212);
line (3403 2456)(3403 2645)(3781 2834)(3781 3212);
lineendcap 4;
line (3781 2456)(3781 2645)(4159 2834)(4159 3212);
lineendcap 5;
line (5103 2456)(5103 2645)(4537 2834)(4537 3212);
line (5481 2456)(5481 2645)(4914 2834)(4914 3212);
line (6426 2456)(6426 2645)(5292 2834)(5292 3212);
line (6804 2456)(6804 2834)(5670 2834)(5670 3212);
line (7371 2456)(7371 3023)(6048 3023)(6048 3212);
figpos (336 295);
figpos (336 673);
figpos (336 1051);
figpos (336 1429);
figpos (336 1807);
figpos (336 2185);
figpos (336 3318);
figpos (336 3696);
figpos (336 4074);
figpos (336 4452);
figpos (336 4830);
figpos (336 5208);
ENDPLANE;
ENDPIC;
ENDMF;
};
}
Comp[3 0 2 10 0 0 0 0]{Type=Fig;
Ctgry=Nest;
FigAttr={
IMgn=[0 0 0 0];
Dim=[1291 353];
};
}
Basic[3 0 2 10 0 0 0 0 0]{Type=ArtTxt;
}
Char[3 0 2 10 0 0 0 0 0 0]{CntInfo='data[0]';
CntSty={
ParSty='図形枠内段落';
};
}
Comp[3 0 2 10 0 0 0 1]{Type=Fig;
Ctgry=Nest;
FigAttr={
IMgn=[0 0 0 0];
Dim=[1291 353];
};
}
Basic[3 0 2 10 0 0 0 1 0]{Type=ArtTxt;
}
Char[3 0 2 10 0 0 0 1 0 0]{CntInfo='data[1]';
CntSty={
ParSty='図形枠内段落';
};
}
Comp[3 0 2 10 0 0 0 2]{Type=Fig;
Ctgry=Nest;
FigAttr={
IMgn=[0 0 0 0];
Dim=[1291 353];
};
}
Basic[3 0 2 10 0 0 0 2 0]{Type=ArtTxt;
}
Char[3 0 2 10 0 0 0 2 0 0]{CntInfo='data[2]';
CntSty={
ParSty='図形枠内段落';
};
}
Comp[3 0 2 10 0 0 0 3]{Type=Fig;
Ctgry=Nest;
FigAttr={
IMgn=[0 0 0 0];
Dim=[1291 353];
};
}
Basic[3 0 2 10 0 0 0 3 0]{Type=ArtTxt;
}
Char[3 0 2 10 0 0 0 3 0 0]{CntInfo='data[3]';
CntSty={
ParSty='図形枠内段落';
};
}
Comp[3 0 2 10 0 0 0 4]{Type=Fig;
Ctgry=Nest;
FigAttr={
IMgn=[0 0 0 0];
Dim=[1291 353];
};
}
Basic[3 0 2 10 0 0 0 4 0]{Type=ArtTxt;
}
Char[3 0 2 10 0 0 0 4 0 0]{CntInfo='data[4]';
CntSty={
ParSty='図形枠内段落';
};
}
Comp[3 0 2 10 0 0 0 5]{Type=Fig;
Ctgry=Nest;
FigAttr={
IMgn=[0 0 0 0];
Dim=[1291 353];
};
}
Basic[3 0 2 10 0 0 0 5 0]{Type=ArtTxt;
}
Char[3 0 2 10 0 0 0 5 0 0]{CntInfo='data[5]';
CntSty={
ParSty='図形枠内段落';
};
}
Comp[3 0 2 10 0 0 0 6]{Type=Fig;
Ctgry=Nest;
FigAttr={
IMgn=[0 0 0 0];
Dim=[1291 353];
};
}
Basic[3 0 2 10 0 0 0 6 0]{Type=ArtTxt;
}
Char[3 0 2 10 0 0 0 6 0 0]{CntInfo='data[0]';
CntSty={
ParSty='図形枠内段落';
};
}
Comp[3 0 2 10 0 0 0 7]{Type=Fig;
Ctgry=Nest;
FigAttr={
IMgn=[0 0 0 0];
Dim=[1291 353];
};
}
Basic[3 0 2 10 0 0 0 7 0]{Type=ArtTxt;
}
Char[3 0 2 10 0 0 0 7 0 0]{CntInfo='data[1]';
CntSty={
ParSty='図形枠内段落';
};
}
Comp[3 0 2 10 0 0 0 8]{Type=Fig;
Ctgry=Nest;
FigAttr={
IMgn=[0 0 0 0];
Dim=[1291 353];
};
}
Basic[3 0 2 10 0 0 0 8 0]{Type=ArtTxt;
}
Char[3 0 2 10 0 0 0 8 0 0]{CntInfo='data[2]';
CntSty={
ParSty='図形枠内段落';
};
}
Comp[3 0 2 10 0 0 0 9]{Type=Fig;
Ctgry=Nest;
FigAttr={
IMgn=[0 0 0 0];
Dim=[1291 353];
};
}
Basic[3 0 2 10 0 0 0 9 0]{Type=ArtTxt;
}
Char[3 0 2 10 0 0 0 9 0 0]{CntInfo='data[3]';
CntSty={
ParSty='図形枠内段落';
};
}
Comp[3 0 2 10 0 0 0 10]{Type=Fig;
Ctgry=Nest;
FigAttr={
IMgn=[0 0 0 0];
Dim=[1291 353];
};
}
Basic[3 0 2 10 0 0 0 10 0]{Type=ArtTxt;
}
Char[3 0 2 10 0 0 0 10 0 0]{CntInfo='data[4]';
CntSty={
ParSty='図形枠内段落';
};
}
Comp[3 0 2 10 0 0 0 11]{Type=Fig;
Ctgry=Nest;
FigAttr={
IMgn=[0 0 0 0];
Dim=[1291 353];
};
}
Basic[3 0 2 10 0 0 0 11 0]{Type=ArtTxt;
}
Char[3 0 2 10 0 0 0 11 0 0]{CntInfo='data[5]';
CntSty={
ParSty='図形枠内段落';
};
}
Comp[3 0 2 10 1]{Type=Desc;
Ctgry=StdInBCap;
}
Comp[3 0 2 10 1 0]{Type=Cap;
Ctgry=FigTtlInBdy;
}
Basic[3 0 2 10 1 0 0]{Type=CapNo;
Ctgry=Discard;
}
Char[3 0 2 10 1 0 0 0]{CntInfo='Fig.2 ';
}
Basic[3 0 2 10 1 0 1]{Type=CapTxt;
}
Char[3 0 2 10 1 0 1 0]{CntInfo='バブルソートのソーティングネットワーク例(最適化後)';
CntSty={
ParSty='図形枠見出し';
};
}
Comp[3 0 3]{Type=NoSeg;
}
Comp[3 0 3 0]{Type=Ttl;
Ctgry=TtlInBdy;
ULayedPageNo=3;
}
Basic[3 0 3 0 0]{Type=TtlNo;
Ctgry=Discard;
}
Char[3 0 3 0 0 0]{CntInfo=' ';
}
Basic[3 0 3 0 1]{Type=TtlTxt;
}
Char[3 0 3 0 1 0]{CntInfo='バブルソートの VHDL 記述';
CntSty={
ParSty='レベル２見出し';
};
}
Comp[3 0 3 1]{Type=NoSeg;
}
Comp[3 0 3 1 0]{Type=Ttl;
Ctgry=TtlInBdy;
ULayedPageNo=3;
}
Basic[3 0 3 1 0 0]{Type=TtlNo;
Ctgry=Discard;
}
Char[3 0 3 1 0 0 0]{CntInfo=' ';
}
Basic[3 0 3 1 0 1]{Type=TtlTxt;
}
Char[3 0 3 1 0 1 0]{CntInfo='ソーティングネットワークの VHDL 記述';
CntSty={
ParSty='レベル３見出し';
};
}
Comp[3 0 3 1 1]{Type=NoSeg;
}
Comp[3 0 3 1 1 0]{Type=Ttl;
Ctgry=TtlInBdy;
ULayedPageNo=3;
}
Basic[3 0 3 1 1 0 0]{Type=TtlNo;
Ctgry=Discard;
}
Char[3 0 3 1 1 0 0 0]{CntInfo=' ';
}
Basic[3 0 3 1 1 0 1]{Type=TtlTxt;
}
Char[3 0 3 1 1 0 1 0]{CntInfo='New_Network 関数';
CntSty={
ParSty='レベル４見出し';
};
}
Basic[3 0 3 1 1 1]{Type=Txt;
}
Char[3 0 3 1 1 1 0]{CntInfo='New_Network 関数は、バブルソートのソーティングネットワークに対応した Sorting_Network.Param_Type([「VHDL で書くソーティングネットワーク(コアパッケージ)」]参照)を生成します。 New_Network 関数は Bubble_Sort_Network パッケージにて定義しています。';
}
Comp[3 0 3 1 1 2]{Type=Fig;
Ctgry=FigInBdy;
FigAttr={
FrmLineVis=[on on on on];
DimType=[on on];
TxtArea=[on off off off];
LineAlign=Ctrd;
Dim=[16916 10376];
TxtAreaSize=[353 0 0 0];
};
}
Comp[3 0 3 1 1 2 0]{Type=Art;
Ctgry=StdInArt;
}
Basic[3 0 3 1 1 2 0 0]{Type=ArtTxt;
}
Char[3 0 3 1 1 2 0 0 0]{CntInfo='library ieee;
use     ieee.std_logic_1164.all;
use     ieee.numeric_std.all;
library Merge_Sorter;
use     Merge_Sorter.Sorting_Network;
package Bubble_Sort_Network is
    function   New_Network(
                  LO          :  integer;
                  HI          :  integer;
                  ORDER       :  integer
    )             return         Sorting_Network.Param_Type;
    function   New_Network(
                  LO          :  integer;
                  HI          :  integer;
                  ORDER       :  integer;
                  QUEUE       :  Sorting_Network.Queue_Param_Type
    )             return         Sorting_Network.Param_Type;
end Bubble_Sort_Network;
';
CntSty={
ParSty='VHDL';
};
}
Comp[3 0 3 1 1 2 1]{Type=Desc;
Ctgry=StdInTCap;
}
Comp[3 0 3 1 1 2 1 0]{Type=Cap;
Ctgry=FigTtlInBdy;
}
Basic[3 0 3 1 1 2 1 0 0]{Type=CapNo;
Ctgry=Discard;
}
Char[3 0 3 1 1 2 1 0 0 0]{CntInfo=' ';
}
Basic[3 0 3 1 1 2 1 0 1]{Type=CapTxt;
}
Char[3 0 3 1 1 2 1 0 1 0]{CntInfo='src/main/vhdl/core/bubble_sort_network.vhd';
CntSty={
ParSty='テキスト枠見出し';
};
}
Basic[3 0 3 1 1 3]{Type=Txt;
}
Char[3 0 3 1 1 3 0]{CntInfo='';
}
Comp[3 0 3 1 1 4]{Type=Fig;
Ctgry=FigInBdy;
FigAttr={
FrmLineVis=[on on on on];
DimType=[on on];
TxtArea=[on off off off];
LineAlign=Ctrd;
Dim=[16781 16072];
TxtAreaSize=[353 0 0 0];
};
}
Comp[3 0 3 1 1 4 0]{Type=Art;
Ctgry=StdInArt;
}
Basic[3 0 3 1 1 4 0 0]{Type=ArtTxt;
}
Char[3 0 3 1 1 4 0 0 0]{CntInfo='package body Bubble_Sort_Network is
    -- (前略) --
    function   New_Network(
                  LO          :  integer;
                  HI          :  integer;
                  ORDER       :  integer
    )             return         Sorting_Network.Param_Type
    is
        variable  network     :  Sorting_Network.Param_Type;
    begin
        network := Sorting_Network.New_Network(LO,HI,ORDER);
        bubble_sort(network, network.Stage_Lo, network.Lo, network.Hi);
        return network;
    end function;
    function   New_Network(
                  LO          :  integer;
                  HI          :  integer;
                  ORDER       :  integer;
                  QUEUE       :  Sorting_Network.Queue_Param_Type
    )             return         Sorting_Network.Param_Type
    is
        variable  network     :  Sorting_Network.Param_Type;
    begin
        network := New_Network(LO,HI,ORDER);
        Sorting_Network.Set_Queue_Param(network, QUEUE);
        return network;
    end function;
end Bubble_Sort_Network;';
CntSty={
ParSty='VHDL';
};
}
Comp[3 0 3 1 1 4 1]{Type=Desc;
Ctgry=StdInTCap;
}
Comp[3 0 3 1 1 4 1 0]{Type=Cap;
Ctgry=FigTtlInBdy;
}
Basic[3 0 3 1 1 4 1 0 0]{Type=CapNo;
Ctgry=Discard;
}
Char[3 0 3 1 1 4 1 0 0 0]{CntInfo=' ';
}
Basic[3 0 3 1 1 4 1 0 1]{Type=CapTxt;
}
Char[3 0 3 1 1 4 1 0 1 0]{CntInfo='src/main/vhdl/core/bubble_sort_network.vhd';
CntSty={
ParSty='テキスト枠見出し';
};
}
Basic[3 0 3 1 1 5]{Type=Txt;
}
Char[3 0 3 1 1 5 0]{CntInfo='';
}
Comp[3 0 3 1 2]{Type=NoSeg;
}
Comp[3 0 3 1 2 0]{Type=Ttl;
Ctgry=TtlInBdy;
LaySty={
NLO=page;
};
ULayedPageNo=5;
}
Basic[3 0 3 1 2 0 0]{Type=TtlNo;
Ctgry=Discard;
}
Char[3 0 3 1 2 0 0 0]{CntInfo=' ';
}
Basic[3 0 3 1 2 0 1]{Type=TtlTxt;
}
Char[3 0 3 1 2 0 1 0]{CntInfo='bubble_sort 関数';
CntSty={
ParSty='レベル４見出し';
};
}
Basic[3 0 3 1 2 1]{Type=Txt;
}
Char[3 0 3 1 2 1 0]{CntInfo='Bubble_Sort_Netowork パッケージボディに定義されたbubble_sort 関数は、前述の Python による実装でしめした bubble_sort に対応します。bubble_sort 関数を再帰的に呼び出しています。';
}
Comp[3 0 3 1 2 2]{Type=Fig;
Ctgry=FigInBdy;
FigAttr={
FrmLineVis=[on on on on];
DimType=[on on];
TxtArea=[on off off off];
LineAlign=Ctrd;
Dim=[16916 14402];
TxtAreaSize=[353 0 0 0];
};
}
Comp[3 0 3 1 2 2 0]{Type=Art;
Ctgry=StdInArt;
}
Basic[3 0 3 1 2 2 0 0]{Type=ArtTxt;
}
Char[3 0 3 1 2 2 0 0 0]{CntInfo='package body Bubble_Sort_Network is
    -- (前略) --
    procedure bubble_sort(
        variable  NETWORK     :  inout Sorting_Network.Param_Type;
                  START_STAGE :  in    integer;
                  LO          :  in    integer;
                  HI          :  in    integer
    ) is
        variable  comp_stage  :        integer;
    begin
        if (HI - LO > 0) then
            comp_stage := START_STAGE;
            for net in HI-1 downto LO loop
                Sorting_Network.Add_Comparator(NETWORK, comp_stage, net, net+1, TRUE);
                if (NETWORK.Stage_Hi \<  comp_stage) then
                    NETWORK.Stage_Hi := comp_stage;
                end if;
                comp_stage := comp_stage + 1;
            end loop;
            NETWORK.Stage_Size := NETWORK.Stage_Hi - NETWORK.Stage_Lo + 1;
            bubble_sort(NETWORK, START_STAGE + 2, LO + 1, HI);
        end if;
    end procedure;
    -- (後略) --
end Bubble_Sort_Network;';
CntSty={
ParSty='VHDL';
};
}
Comp[3 0 3 1 2 2 1]{Type=Desc;
Ctgry=StdInTCap;
}
Comp[3 0 3 1 2 2 1 0]{Type=Cap;
Ctgry=FigTtlInBdy;
}
Basic[3 0 3 1 2 2 1 0 0]{Type=CapNo;
Ctgry=Discard;
}
Char[3 0 3 1 2 2 1 0 0 0]{CntInfo=' ';
}
Basic[3 0 3 1 2 2 1 0 1]{Type=CapTxt;
}
Char[3 0 3 1 2 2 1 0 1 0]{CntInfo='src/main/vhdl/core/bubble_sort_network.vhd';
CntSty={
ParSty='テキスト枠見出し';
};
}
Basic[3 0 3 1 2 3]{Type=Txt;
}
Char[3 0 3 1 2 3 0]{CntInfo='';
}
Comp[3 0 3 2]{Type=NoSeg;
}
Comp[3 0 3 2 0]{Type=Ttl;
Ctgry=TtlInBdy;
LaySty={
NLO=page;
};
ULayedPageNo=6;
}
Basic[3 0 3 2 0 0]{Type=TtlNo;
Ctgry=Discard;
}
Char[3 0 3 2 0 0 0]{CntInfo=' ';
}
Basic[3 0 3 2 0 1]{Type=TtlTxt;
}
Char[3 0 3 2 0 1 0]{CntInfo='バブルソートの VHDL 記述例';
CntSty={
ParSty='レベル３見出し';
};
}
Basic[3 0 3 2 1]{Type=Txt;
}
Char[3 0 3 2 1 0]{CntInfo='[「VHDL で書くソーティングネットワーク(コアパッケージ)」]で説明した Sorting_Network_Core に、前述で説明した New_Network関数で生成したソーティングネットワーク構成を示す定数を渡してバブルソート回路を構成した例を示します。';
}
Comp[3 0 3 2 2]{Type=NoSeg;
}
Comp[3 0 3 2 2 0]{Type=Ttl;
Ctgry=TtlInBdy;
ULayedPageNo=6;
}
Basic[3 0 3 2 2 0 0]{Type=TtlNo;
Ctgry=Discard;
}
Char[3 0 3 2 2 0 0 0]{CntInfo=' ';
}
Basic[3 0 3 2 2 0 1]{Type=TtlTxt;
}
Char[3 0 3 2 2 0 1 0]{CntInfo='Entity ';
CntSty={
ParSty='レベル４見出し';
};
}
Comp[3 0 3 2 2 1]{Type=Fig;
Ctgry=FigInBdy;
FigAttr={
FrmLineVis=[on on on on];
DimType=[on on];
TxtArea=[on off off off];
LineAlign=Ctrd;
Dim=[16916 19126];
TxtAreaSize=[353 0 0 0];
};
}
Comp[3 0 3 2 2 1 0]{Type=Art;
Ctgry=StdInArt;
}
Basic[3 0 3 2 2 1 0 0]{Type=ArtTxt;
}
Char[3 0 3 2 2 1 0 0 0]{CntInfo='library ieee;
use     ieee.std_logic_1164.all;
entity  Bubble_Sorter is
    generic (
        WORDS           :  integer :=  4;
        DATA_BITS       :  integer := 32;
        COMP_HIGH       :  integer := 32;
        COMP_LOW        :  integer :=  0;
        COMP_SIGN       :  boolean := FALSE;
        SORT_ORDER      :  integer :=  0;
        ATRB_BITS       :  integer :=  4;
        INFO_BITS       :  integer :=  1;
        QUEUE_SIZE      :  integer :=  0
    );
    port (
        CLK             :  in  std_logic;
        RST             :  in  std_logic;
        CLR             :  in  std_logic;
        I_DATA          :  in  std_logic_vector(WORDS*DATA_BITS-1 downto 0);
        I_ATRB          :  in  std_logic_vector(WORDS*ATRB_BITS-1 downto 0) := (others => \'0\');
        I_INFO          :  in  std_logic_vector(      INFO_BITS-1 downto 0) := (others => \'0\');
        I_VALID         :  in  std_logic;
        I_READY         :  out std_logic;
        O_DATA          :  out std_logic_vector(WORDS*DATA_BITS-1 downto 0);
        O_ATRB          :  out std_logic_vector(WORDS*ATRB_BITS-1 downto 0);
        O_INFO          :  out std_logic_vector(      INFO_BITS-1 downto 0);
        O_VALID         :  out std_logic;
        O_READY         :  in  std_logic;
        BUSY            :  out std_logic
    );
end Bubble_Sorter;
';
CntSty={
ParSty='VHDL';
};
}
Comp[3 0 3 2 2 1 1]{Type=Desc;
Ctgry=StdInTCap;
}
Comp[3 0 3 2 2 1 1 0]{Type=Cap;
Ctgry=FigTtlInBdy;
}
Basic[3 0 3 2 2 1 1 0 0]{Type=CapNo;
Ctgry=Discard;
}
Char[3 0 3 2 2 1 1 0 0 0]{CntInfo=' ';
}
Basic[3 0 3 2 2 1 1 0 1]{Type=CapTxt;
}
Char[3 0 3 2 2 1 1 0 1 0]{CntInfo='src/main/vhdl/examples/bubble_sorter/bubble_sorter.vhd';
CntSty={
ParSty='テキスト枠見出し';
};
}
Comp[3 0 3 2 3]{Type=NoSeg;
}
Comp[3 0 3 2 3 0]{Type=Ttl;
Ctgry=TtlInBdy;
LaySty={
NLO=page;
};
ULayedPageNo=7;
}
Basic[3 0 3 2 3 0 0]{Type=TtlNo;
Ctgry=Discard;
}
Char[3 0 3 2 3 0 0 0]{CntInfo=' ';
}
Basic[3 0 3 2 3 0 1]{Type=TtlTxt;
}
Char[3 0 3 2 3 0 1 0]{CntInfo='Architecture';
CntSty={
ParSty='レベル４見出し';
};
}
Basic[3 0 3 2 3 1]{Type=Txt;
}
Char[3 0 3 2 3 1 0]{CntInfo='[「VHDL で書くマージソーター(ワードの定義)」]で説明したパラメータを WORD_PARAM 定数に設定します。';
}
Comp[3 0 3 2 3 2]{Type=Fig;
Ctgry=FigInBdy;
FigAttr={
FrmLineVis=[on on on on];
DimType=[on on];
TxtArea=[on off off off];
LineAlign=Ctrd;
Dim=[16125 7724];
TxtAreaSize=[353 0 0 0];
};
}
Comp[3 0 3 2 3 2 0]{Type=Art;
Ctgry=StdInArt;
}
Basic[3 0 3 2 3 2 0 0]{Type=ArtTxt;
}
Char[3 0 3 2 3 2 0 0 0]{CntInfo='library ieee;
use     ieee.std_logic_1164.all;
library Merge_Sorter;
use     Merge_Sorter.Word;
use     Merge_Sorter.Sorting_Network;
use     Merge_Sorter.Bubble_Sort_Network;
use     Merge_Sorter.Core_Components.Sorting_Network_Core;
architecture RTL of Bubble_Sorter is
    constant  WORD_PARAM    :  Word.Param_Type := Word.New_Param(DATA_BITS, COMP_LOW, COMP_HIGH, COMP_SIGN);
    signal    i_word        :  std_logic_vector(WORDS*WORD_PARAM.BITS-1 downto 0);
    signal    o_word        :  std_logic_vector(WORDS*WORD_PARAM.BITS-1 downto 0);
begin';
CntSty={
ParSty='VHDL';
};
}
Comp[3 0 3 2 3 2 1]{Type=Desc;
Ctgry=StdInTCap;
}
Comp[3 0 3 2 3 2 1 0]{Type=Cap;
Ctgry=FigTtlInBdy;
}
Basic[3 0 3 2 3 2 1 0 0]{Type=CapNo;
Ctgry=Discard;
}
Char[3 0 3 2 3 2 1 0 0 0]{CntInfo=' ';
}
Basic[3 0 3 2 3 2 1 0 1]{Type=CapTxt;
}
Char[3 0 3 2 3 2 1 0 1 0]{CntInfo='src/main/vhdl/examples/bubble_sorter/bubble_sorter.vhd';
CntSty={
ParSty='テキスト枠見出し';
};
}
Basic[3 0 3 2 3 3]{Type=Txt;
}
Char[3 0 3 2 3 3 0]{CntInfo='';
}
Basic[3 0 3 2 3 4]{Type=Txt;
}
Char[3 0 3 2 3 4 0]{CntInfo='入力された I_DATA と I_ATRB を前述の WARD_PARAM 定数で指定されたワード形式に変換します。';
}
Comp[3 0 3 2 3 5]{Type=Fig;
Ctgry=FigInBdy;
FigAttr={
FrmLineVis=[on on on on];
DimType=[on on];
TxtArea=[on off off off];
LineAlign=Ctrd;
Dim=[16916 8992];
TxtAreaSize=[353 0 0 0];
};
}
Comp[3 0 3 2 3 5 0]{Type=Art;
Ctgry=StdInArt;
}
Basic[3 0 3 2 3 5 0 0]{Type=ArtTxt;
}
Char[3 0 3 2 3 5 0 0 0]{CntInfo='    process (I_DATA, I_ATRB)
        variable   data     :  std_logic_vector(DATA_BITS-1 downto 0);
        variable   atrb     :  std_logic_vector(ATRB_BITS-1 downto 0);
        variable   word     :  std_logic_vector(WORD_PARAM.BITS-1 downto 0);
    begin
        for i in 0 to WORDS-1 loop
            data := I_DATA((i+1)*DATA_BITS-1 downto i*DATA_BITS);
            atrb := I_ATRB((i+1)*ATRB_BITS-1 downto i*ATRB_BITS);
            word(WORD_PARAM.DATA_HI downto WORD_PARAM.DATA_LO) := data;
            word(WORD_PARAM.ATRB_NONE_POS    ) := atrb(0);
            word(WORD_PARAM.ATRB_PRIORITY_POS) := atrb(1);
            word(WORD_PARAM.ATRB_POSTPEND_POS) := atrb(2);
            i_word((i+1)*WORD_PARAM.BITS-1 downto i*WORD_PARAM.BITS) \<= word;
        end loop;
    end process;
';
CntSty={
ParSty='VHDL';
};
}
Comp[3 0 3 2 3 5 1]{Type=Desc;
Ctgry=StdInTCap;
}
Comp[3 0 3 2 3 5 1 0]{Type=Cap;
Ctgry=FigTtlInBdy;
}
Basic[3 0 3 2 3 5 1 0 0]{Type=CapNo;
Ctgry=Discard;
}
Char[3 0 3 2 3 5 1 0 0 0]{CntInfo=' ';
}
Basic[3 0 3 2 3 5 1 0 1]{Type=CapTxt;
}
Char[3 0 3 2 3 5 1 0 1 0]{CntInfo='src/main/vhdl/examples/bubble_sorter/bubble_sorter.vhd';
CntSty={
ParSty='テキスト枠見出し';
};
}
Basic[3 0 3 2 3 6]{Type=Txt;
}
Char[3 0 3 2 3 6 0]{CntInfo='';
}
Basic[3 0 3 2 3 7]{Type=Txt;
}
Char[3 0 3 2 3 7 0]{CntInfo='前節で説明した Bubble_Sort_Network.New_Network 関数を使ってバブルソートのソーティングネットワークを構築して Sorting_Network_Core に渡します。これでバブルソートを行うソーティングネットワークが出来ます。';
}
Comp[3 0 3 2 3 8]{Type=Fig;
Ctgry=FigInBdy;
FigAttr={
FrmLineVis=[on on on on];
DimType=[on on];
TxtArea=[on off off off];
LineAlign=Ctrd;
Dim=[16916 14616];
TxtAreaSize=[353 0 0 0];
};
}
Comp[3 0 3 2 3 8 0]{Type=Art;
Ctgry=StdInArt;
}
Basic[3 0 3 2 3 8 0 0]{Type=ArtTxt;
}
Char[3 0 3 2 3 8 0 0 0]{CntInfo='    CORE: Sorting_Network_Core
        generic map (
            NETWORK_PARAM   => Bubble_Sort_Network.New_Network(
                                   LO    => 0,
                                   HI    => WORDS-1,
                                   ORDER => SORT_ORDER,
                                   QUEUE => Sorting_Network.Constant_Queue_Size(QUEUE_SIZE)
                               ),
            WORD_PARAM      => WORD_PARAM      , -- 
            INFO_BITS       => INFO_BITS         -- 
        )                                        -- 
        port map (                               -- 
            CLK             => CLK             , -- In  :
            RST             => RST             , -- In  :
            CLR             => CLR             , -- In  :
            I_WORD          => i_word          , -- In  :
            I_INFO          => I_INFO          , -- In  :
            I_VALID         => I_VALID         , -- In  :
            I_READY         => I_READY         , -- Out :
            O_WORD          => o_word          , -- Out :
            O_INFO          => O_INFO          , -- Out :
            O_VALID         => O_VALID         , -- Out :
            O_READY         => O_READY         , -- In  :
            BUSY            => BUSY              -- Out :
        );';
CntSty={
ParSty='VHDL';
};
}
Comp[3 0 3 2 3 8 1]{Type=Desc;
Ctgry=StdInTCap;
}
Comp[3 0 3 2 3 8 1 0]{Type=Cap;
Ctgry=FigTtlInBdy;
}
Basic[3 0 3 2 3 8 1 0 0]{Type=CapNo;
Ctgry=Discard;
}
Char[3 0 3 2 3 8 1 0 0 0]{CntInfo=' ';
}
Basic[3 0 3 2 3 8 1 0 1]{Type=CapTxt;
}
Char[3 0 3 2 3 8 1 0 1 0]{CntInfo='src/main/vhdl/examples/bubble_sorter/bubble_sorter.vhd';
CntSty={
ParSty='テキスト枠見出し';
};
}
Basic[3 0 3 2 3 9]{Type=Txt;
}
Char[3 0 3 2 3 9 0]{CntInfo='';
}
Basic[3 0 3 2 3 10]{Type=Txt;
LaySty={
NLO=page;
};
}
Char[3 0 3 2 3 10 0]{CntInfo='最後にソート結果を O_WORD と O_ATRB に変換して出力します。';
}
Comp[3 0 3 2 3 11]{Type=Fig;
Ctgry=FigInBdy;
FigAttr={
FrmLineVis=[on on on on];
DimType=[on on];
TxtArea=[on off off off];
LineAlign=Ctrd;
Dim=[16916 9794];
TxtAreaSize=[353 0 0 0];
};
}
Comp[3 0 3 2 3 11 0]{Type=Art;
Ctgry=StdInArt;
}
Basic[3 0 3 2 3 11 0 0]{Type=ArtTxt;
}
Char[3 0 3 2 3 11 0 0 0]{CntInfo='    process (o_word)
        variable   data     :  std_logic_vector(DATA_BITS-1 downto 0);
        variable   atrb     :  std_logic_vector(ATRB_BITS-1 downto 0);
        variable   word     :  std_logic_vector(WORD_PARAM.BITS-1 downto 0);
    begin
        for i in 0 to WORDS-1 loop
            word := o_word((i+1)*WORD_PARAM.BITS-1 downto i*WORD_PARAM.BITS);
            data := word(WORD_PARAM.DATA_HI downto WORD_PARAM.DATA_LO);
            atrb    := (others => \'0\');
            atrb(0) := word(WORD_PARAM.ATRB_NONE_POS    );
            atrb(1) := word(WORD_PARAM.ATRB_PRIORITY_POS);
            atrb(2) := word(WORD_PARAM.ATRB_POSTPEND_POS);
            O_DATA((i+1)*DATA_BITS-1 downto i*DATA_BITS) \<= data;
            O_ATRB((i+1)*ATRB_BITS-1 downto i*ATRB_BITS) \<= atrb;
        end loop;
    end process;
end RTL;
';
CntSty={
ParSty='VHDL';
};
}
Comp[3 0 3 2 3 11 1]{Type=Desc;
Ctgry=StdInTCap;
}
Comp[3 0 3 2 3 11 1 0]{Type=Cap;
Ctgry=FigTtlInBdy;
}
Basic[3 0 3 2 3 11 1 0 0]{Type=CapNo;
Ctgry=Discard;
}
Char[3 0 3 2 3 11 1 0 0 0]{CntInfo=' ';
}
Basic[3 0 3 2 3 11 1 0 1]{Type=CapTxt;
}
Char[3 0 3 2 3 11 1 0 1 0]{CntInfo='src/main/vhdl/examples/bubble_sorter/bubble_sorter.vhd';
CntSty={
ParSty='テキスト枠見出し';
};
}
Basic[3 0 3 2 3 12]{Type=Txt;
}
Char[3 0 3 2 3 12 0]{CntInfo='';
}
Comp[3 0 4]{Type=NoSeg;
}
Comp[3 0 4 0]{Type=Ttl;
Ctgry=TtlInBdy;
ULayedPageNo=10;
}
Basic[3 0 4 0 0]{Type=TtlNo;
Ctgry=Discard;
}
Char[3 0 4 0 0 0]{CntInfo=' ';
}
Basic[3 0 4 0 1]{Type=TtlTxt;
}
Char[3 0 4 0 1 0]{CntInfo='まとめ';
CntSty={
ParSty='レベル２見出し';
};
}
Basic[3 0 4 1]{Type=Txt;
}
Char[3 0 4 1 0]{CntInfo='この記事では、バブルソートに基づいたソーティングネットワークを VHDL で記述する方法を紹介しました。バブルソートは、バイトニックマージソートやバッチャー奇遇マージソートなどのマージソートに比べて、メカニズムが単純で、かつソートする要素数が２のべき乗値に限定されない利点があります。しかしコンパレーターの数が要素数nに対して (n×(n-1)÷2) なので O(n**2) で増加し、またステージ数は (n-1)+(n-2)=2n-3 になるので、要素数が多くなるほどマージソートに比べて不利になります。';
}
Basic[3 0 4 2]{Type=Txt;
}
Char[3 0 4 2 0]{CntInfo='そこで次回は、マージソートの利点を残しつつ要素数が２のべき乗値に限定されない非対称マージソートについて紹介します。';
}
Basic[3 0 4 3]{Type=Txt;
}
Char[3 0 4 3 0]{CntInfo='・[「VHDL で書くソーティングネットワーク(非対称マージソート)」]';
CntSty={
ParSty='本文箇条書きレベル１';
};
}
Basic[3 0 4 4]{Type=Txt;
}
Char[3 0 4 4 0]{CntInfo='';
}
Comp[3 0 5]{Type=NoSeg;
}
Comp[3 0 5 0]{Type=Ttl;
Ctgry=TtlInBdy;
LaySty={
NLO=null;
};
ULayedPageNo=10;
}
Basic[3 0 5 0 0]{Type=TtlNo;
Ctgry=Discard;
}
Char[3 0 5 0 0 0]{CntInfo=' ';
}
Basic[3 0 5 0 1]{Type=TtlTxt;
}
Char[3 0 5 0 1 0]{CntInfo='参照';
CntSty={
ParSty='レベル２見出し';
};
}
Comp[3 0 5 1]{Type=NoSeg;
}
Comp[3 0 5 1 0]{Type=Ttl;
Ctgry=TtlInBdy;
ULayedPageNo=10;
}
Basic[3 0 5 1 0 0]{Type=TtlNo;
Ctgry=Discard;
}
Char[3 0 5 1 0 0 0]{CntInfo=' ';
}
Basic[3 0 5 1 0 1]{Type=TtlTxt;
}
Char[3 0 5 1 0 1 0]{CntInfo='参考記事';
CntSty={
ParSty='レベル３見出し';
};
}
Basic[3 0 5 1 1]{Type=Txt;
}
Char[3 0 5 1 1 0]{CntInfo='・[「VHDL で書くマージソーター(はじめに)」]';
CntSty={
ParSty='本文箇条書きレベル１';
Align=Start;
};
}
Basic[3 0 5 1 2]{Type=Txt;
}
Char[3 0 5 1 2 0]{CntInfo='・[「VHDL で書くマージソーター(ワードの定義)」]';
CntSty={
ParSty='本文箇条書きレベル１';
Align=Start;
};
}
Basic[3 0 5 1 3]{Type=Txt;
}
Char[3 0 5 1 3 0]{CntInfo='・[「VHDL で書くソーティングネットワーク(コアパッケージ)」]';
CntSty={
ParSty='本文箇条書きレベル１';
Align=Start;
};
}
Basic[3 0 5 1 4]{Type=Txt;
}
Char[3 0 5 1 4 0]{CntInfo='・[「VHDL で書くソーティングネットワーク(バイトニックマージソート)」]';
CntSty={
ParSty='本文箇条書きレベル１';
};
}
Basic[3 0 5 1 5]{Type=Txt;
}
Char[3 0 5 1 5 0]{CntInfo='・[「VHDL で書くソーティングネットワーク(バッチャー奇偶マージソート)」]';
CntSty={
ParSty='本文箇条書きレベル１';
};
}
Basic[3 0 5 1 6]{Type=Txt;
}
Char[3 0 5 1 6 0]{CntInfo='・[「VHDL で書くソーティングネットワーク(非対称マージソート)」]';
CntSty={
ParSty='本文箇条書きレベル１';
};
}
Comp[3 0 5 2]{Type=NoSeg;
}
Comp[3 0 5 2 0]{Type=Ttl;
Ctgry=TtlInBdy;
ULayedPageNo=10;
}
Basic[3 0 5 2 0 0]{Type=TtlNo;
Ctgry=Discard;
}
Char[3 0 5 2 0 0 0]{CntInfo=' ';
}
Basic[3 0 5 2 0 1]{Type=TtlTxt;
}
Char[3 0 5 2 0 1 0]{CntInfo='ソースコード';
CntSty={
ParSty='レベル３見出し';
};
}
Basic[3 0 5 2 1]{Type=Txt;
}
Char[3 0 5 2 1 0]{CntInfo='・https://github.com/ikwzm/Merge_Sorter/blob/1.4.1/src/main/vhdl/core/sorting_network.vhd';
CntSty={
ParSty='本文箇条書きレベル１';
Align=Start;
};
}
Basic[3 0 5 2 2]{Type=Txt;
}
Char[3 0 5 2 2 0]{CntInfo='・https://github.com/ikwzm/Merge_Sorter/blob/1.4.1/src/main/vhdl/core/bubble_sort_network.vhd';
CntSty={
ParSty='本文箇条書きレベル１';
Align=Start;
};
}
Basic[3 0 5 2 3]{Type=Txt;
}
Char[3 0 5 2 3 0]{CntInfo='・https://github.com/ikwzm/Merge_Sorter/blob/1.4.1/src/main/vhdl/examples/bubble_sorter/bubble_sorter.vhd';
CntSty={
ParSty='本文箇条書きレベル１';
Align=Start;
};
}
Comp[3 0 5 3]{Type=NoSeg;
}
Comp[3 0 5 3 0]{Type=Ttl;
Ctgry=TtlInBdy;
ULayedPageNo=10;
}
Basic[3 0 5 3 0 0]{Type=TtlNo;
Ctgry=Discard;
}
Char[3 0 5 3 0 0 0]{CntInfo=' ';
}
Basic[3 0 5 3 0 1]{Type=TtlTxt;
}
Char[3 0 5 3 0 1 0]{CntInfo='出典';
CntSty={
ParSty='レベル３見出し';
Align=Start;
};
}
Basic[3 0 5 3 1]{Type=Txt;
}
Char[3 0 5 3 1 0]{CntInfo='・[https://wikipedia.org/wiki/Bubble_sort]';
CntSty={
ParSty='本文箇条書きレベル１';
Align=Start;
};
}
Basic[3 0 5 3 2]{Type=Txt;
}
Char[3 0 5 3 2 0]{CntInfo='・[『Pythonで学ぶアルゴリズム　第17弾：並べ替え（バブルソート）』@Qiita](https://qiita.com/Yuya-Shimizu/items/99349001f0fccc0d8d41)';
CntSty={
ParSty='本文箇条書きレベル１';
Align=Start;
};
}
